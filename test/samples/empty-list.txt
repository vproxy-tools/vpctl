apply -f server-group/sg-empty-list.yaml
ServerGroup:sg001 created
***********
get sg sg001
NAME    SERVERS   UP   DOWN
sg001   0         0    0
***********
get sg sg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static: []
status:
  servers: []
***********
apply -f server-group/sg-empty-list.yaml
ServerGroup:sg001 unchanged
***********
apply -f server-group/sg-normal-list.yaml
ServerGroup/Server:sg001/svr1 created
***********
get sg sg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static:
    - name: svr1
      address: 127.0.0.1:10001
      weight: 10
status:
  servers:
  - name: svr1
    address: 127.0.0.1:10001
    weight: 10
    currentIp: 127.0.0.1
    status: DOWN
    cost: -1
    downReason: 'ConnectException: Connection refused'
***********
apply -f server-group/sg-empty-list.yaml
ServerGroup/Server:sg001/svr1 deleted
***********
get sg sg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static: []
status:
  servers: []
***********
apply -f security-group/secg-empty-list.yaml
SecurityGroup:secg001 created
***********
get secg secg001
NAME      DEFAULT-RULE   RULES
secg001   allow          0
***********
get secg secg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: SecurityGroup
metadata:
  name: secg001
  annotations: {}
spec:
  defaultRule: allow
  rules: []
***********
apply -f security-group/secg-empty-list.yaml
SecurityGroup:secg001 unchanged
***********
apply -f security-group/secg-normal-list.yaml
SecurityGroup/SecurityGroupRule:secg001/r001 created
***********
get secg secg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: SecurityGroup
metadata:
  name: secg001
  annotations: {}
spec:
  defaultRule: allow
  rules:
  - name: r001
    clientNetwork: 127.0.0.0/8
    protocol: TCP
    serverPortMin: 80
    serverPortMax: 80
    rule: deny
***********
apply -f security-group/secg-empty-list.yaml
SecurityGroup/SecurityGroupRule:secg001/r001 deleted
***********
get secg secg001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: SecurityGroup
metadata:
  name: secg001
  annotations: {}
spec:
  defaultRule: allow
  rules: []
***********
apply -f upstream/ups-empty-list.yaml
Upstream:ups001 created
***********
get ups ups001
NAME     SERVER-GROUPS
ups001   0
***********
get ups ups001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups: []
***********
apply -f upstream/ups-empty-list.yaml
Upstream:ups001 unchanged
***********
apply -f upstream/ups-normal-list.yaml
Upstream/ServerGroup:ups001/sg001 created
***********
get ups ups001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups:
  - name: sg001
    weight: 10
***********
apply -f upstream/ups-empty-list.yaml
Upstream/ServerGroup:ups001/sg001 deleted
***********
get ups ups001 -o yaml
---
apiVersion: app.vproxy.io/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups: []
***********
delete -f upstream/ups-empty-list.yaml
Upstream:ups001 deleted
***********
delete -f security-group/secg-empty-list.yaml
SecurityGroup:secg001 deleted
***********
delete -f server-group/sg-empty-list.yaml
ServerGroup:sg001 deleted
