# create servers with weight 0
# update servers to weight 0
apply -f server-group/sg-weight-0.yaml
ServerGroup:sg001 created
ServerGroup/Server:sg001/svr1 created
***********
get sg -o yaml
---
apiVersion: vproxy/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static:
    - name: svr1
      address: 127.0.0.1:10001
      weight: 0
status:
  servers:
  - name: svr1
    address: 127.0.0.1:10001
    weight: 0
    currentIp: 127.0.0.1
    status: DOWN
***********
apply -f server-group/sg-weight-0.yaml
ServerGroup:sg001 unchanged
***********
apply -f server-group/sg-weight-10.yaml
ServerGroup/Server:sg001/svr1 configured
***********
get sg sg001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static:
    - name: svr1
      address: 127.0.0.1:10001
      weight: 10
status:
  servers:
  - name: svr1
    address: 127.0.0.1:10001
    weight: 10
    currentIp: 127.0.0.1
    status: DOWN
***********
apply -f server-group/sg-weight-0.yaml
ServerGroup/Server:sg001/svr1 configured
***********
get sg sg001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: ServerGroup
metadata:
  name: sg001
  annotations: {}
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: tcp
  method: wrr
  servers:
    static:
    - name: svr1
      address: 127.0.0.1:10001
      weight: 0
status:
  servers:
  - name: svr1
    address: 127.0.0.1:10001
    weight: 0
    currentIp: 127.0.0.1
    status: DOWN
***********
# create server-group in upstream with weight 0
# update server-group in upstream with weight 0
apply -f upstream/ups-weight-0.yaml
Upstream:ups001 created
Upstream/ServerGroup:ups001/sg001 created
***********
get ups ups001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups:
  - name: sg001
    weight: 0
    annotations: {}
***********
apply -f upstream/ups-weight-0.yaml
Upstream:ups001 unchanged (text)
***********
apply -f upstream/ups-weight-10.yaml
Upstream/ServerGroup:ups001/sg001 configured
***********
get ups ups001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups:
  - name: sg001
    weight: 10
    annotations: {}
***********
apply -f upstream/ups-weight-0.yaml
Upstream/ServerGroup:ups001/sg001 configured
***********
get ups ups001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Upstream
metadata:
  name: ups001
  annotations: {}
spec:
  serverGroups:
  - name: sg001
    weight: 0
    annotations: {}
***********
# create dns-server with ttl 0
# update dns-server to ttl 0
apply -f dns-server/dns-ttl-0.yaml
DnsServer:dns001 created
***********
get dns dns001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: DnsServer
metadata:
  name: dns001
  annotations: {}
spec:
  address: 127.0.0.1:23353
  rrsets: ups001
  ttl: 0
  securityGroup: (allow-all)
***********
apply -f dns-server/dns-ttl-0.yaml
DnsServer:dns001 unchanged
***********
apply -f dns-server/dns-ttl-10.yaml
DnsServer:dns001 configured
***********
get dns dns001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: DnsServer
metadata:
  name: dns001
  annotations: {}
spec:
  address: 127.0.0.1:23353
  rrsets: ups001
  ttl: 10
  securityGroup: (allow-all)
***********
apply -f dns-server/dns-ttl-0.yaml
DnsServer:dns001 configured
***********
get dns dns001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: DnsServer
metadata:
  name: dns001
  annotations: {}
spec:
  address: 127.0.0.1:23353
  rrsets: ups001
  ttl: 0
  securityGroup: (allow-all)
***********
# create socks5-server with allow = false
# update socks5-server to allow = false
apply -f socks5-server/socks5-allow-false.yaml
Socks5Server:socks5-001 created
***********
get socks5 socks5-001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Socks5Server
metadata:
  name: socks5-001
  annotations: {}
spec:
  address: 127.0.0.1:50001
  backend: ups001
  securityGroup: (allow-all)
  allowNonBackend: false
***********
apply -f socks5-server/socks5-allow-false.yaml
Socks5Server:socks5-001 unchanged
***********
apply -f socks5-server/socks5-allow-true.yaml
Socks5Server:socks5-001 configured
***********
get socks5 socks5-001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Socks5Server
metadata:
  name: socks5-001
  annotations: {}
spec:
  address: 127.0.0.1:50001
  backend: ups001
  securityGroup: (allow-all)
  allowNonBackend: true
***********
apply -f socks5-server/socks5-allow-false.yaml
Socks5Server:socks5-001 configured
***********
get socks5 socks5-001 -o yaml
---
apiVersion: vproxy/v1alpha1
kind: Socks5Server
metadata:
  name: socks5-001
  annotations: {}
spec:
  address: 127.0.0.1:50001
  backend: ups001
  securityGroup: (allow-all)
  allowNonBackend: false
***********
# release resources
delete dns dns001
DnsServer:dns001 deleted
***********
delete socks5 socks5-001
Socks5Server:socks5-001 deleted
***********
delete ups ups001
Upstream:ups001 deleted
***********
delete sg sg001
ServerGroup:sg001 deleted
