---
apiVersion: vproxy.cc/v1alpha1
kind: TcpLb
metadata:
  name: web-http
selector:
  app: vproxy-gateway
spec:
  address: 0.0.0.0:80
  backend: my-services
  protocol: http

---
apiVersion: vproxy.cc/v1alpha1
kind: TcpLb
metadata:
  name: web-https
selector:
  app: vproxy-gateway
spec:
  address: 0.0.0.0:443
  backend: my-services
  protocol: http
  listOfCertKey:
  - crt-example
  - crt-example2

---
apiVersion: vproxy.cc/v1alpha1
kind: Socks5Server
metadata:
  name: manage-socks5
selector:
  app: vproxy-gateway
spec:
  address: 0.0.0.0:1080
  backend: my-services
  securityGroup: work-area-only

---
apiVersion: vproxy.cc/v1alpha1
kind: DnsServer
metadata:
  name: dns-server
selector:
  app: vproxy-gateway
spec:
  address: 0.0.0.0:53
  rrsets: my-services

---
apiVersion: vproxy.cc/v1alpha1
kind: Upstream
metadata:
  name: my-services
spec:
  serverGroups:
  - name: group-example
  - name: group-example2

---
apiVersion: vproxy.cc/v1alpha1
kind: ServerGroup
metadata:
  name: group-example
  annotations:
    vproxy/hint-host: example.com
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: http
  servers:
    services:
    - name: svc-example-ver1
      weight: 10
    - name: svc-example-ver2
      weight: 5

---
apiVersion: vproxy.cc/v1alpha1
kind: ServerGroup
metadata:
  name: group-example2
  annotations:
    vproxy/hint-host: example2.com
spec:
  timeout: 1000
  period: 5000
  up: 2
  down: 3
  protocol: http
  servers:
    services:
    - name: svc-example2

---
apiVersion: vproxy.cc/v1alpha1
kind: SecurityGroup
metadata:
  name: work-area-only
spec:
  defaultRule: deny
  rules:
  - name: area-1
    clientNetwork: 59.1.2.0/24
    protocol: TCP
    serverPortMin: 51080
    serverPortMax: 51080
    rule: allow

---
apiVersion: v1
kind: Service
metadata:
  name: svc-example-ver1
spec:
  selector:
    app: example
    version: v1
  ports:
  - protocol: TCP
    port: 80

---
apiVersion: v1
kind: Service
metadata:
  name: svc-example-ver2
spec:
  selector:
    app: example
    version: v2
  ports:
  - protocol: TCP
    port: 80

---
apiVersion: v1
kind: Service
metadata:
  name: svc-example2
spec:
  selector:
    app: example2
  ports:
  - protocol: TCP
    port: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: crt-example
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURzekNDQXB1Z0F3SUJBZ0lKQUl2VHpJMkM5a2lPTUEwR0NTcUdTSWIzRFFFQkN3VUFNR0l4Q3pBSkJnTlYKQkFZVEFrTk9NUTh3RFFZRFZRUUlEQVoyY0hKdmVIa3hEekFOQmdOVkJBY01Cblp3Y205NGVURVBNQTBHQTFVRQpDZ3dHZG5CeWIzaDVNUTh3RFFZRFZRUUxEQVoyY0hKdmVIa3hEekFOQmdOVkJBTU1Cblp3Y205NGVUQWVGdzB5Ck1EQXhNakl3TmpJeU5EWmFGdzB5TVRBeE1qRXdOakl5TkRaYU1Hc3hDekFKQmdOVkJBWVRBa05PTVJBd0RnWUQKVlFRSURBZGxlR0Z0Y0d4bE1SQXdEZ1lEVlFRSERBZGxlR0Z0Y0d4bE1SQXdEZ1lEVlFRS0RBZGxlR0Z0Y0d4bApNUkF3RGdZRFZRUUxEQWRsZUdGdGNHeGxNUlF3RWdZRFZRUUREQXRsZUdGdGNHeGxMbU52YlRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUt5NjhBRWM1VDczZ1RYMmFjR0lBVEcvOC9zSXBSeXUKMXRzV1R1QjdSMzJBL3FVWWFZOE5hRjZDaHJCaUtGK2VabU1IdW1rcmdqNjhIYXc1MDhZV1hqK1F3R2p0SVlheQppd2NHNHlOZTJvakcrRFJoaHJBR1g4R3JOdEpMQklnVCtTaHk2UFN4akdWOUQ5c0dHYXJISWNZODduUFVDNVhmCldNZ3VBdy8yMi8xODlpZ21Oa0FrU1NKREFTTlJLalV1TXo0Nm5Oc1hzTFRBK0ZzOHVGTGEvdXhDRE9TUTdiUlkKNFRNbm5NRklmNzB4Sm96NE8wRnlWb3NzZ0hjMWdUd3NrUlMzQ0dYOE1Pc0RuS3JaMXpNNUFCNXJBczdGWE5BTwpqK2FPMWs2U0RXS0JMUGRRa0t1Z2lxaDEzaWRVYnBhMXY5bGM3K0hMcXh6SSt1MjdFMkhvT0RjQ0F3RUFBYU5qCk1HRXdDUVlEVlIwVEJBSXdBREFMQmdOVkhROEVCQU1DQmVBd1J3WURWUjBSQkVBd1BvSU5LaTVsZUdGdGNHeGwKTG1OdmJZSUxaWGhoYlhCc1pTNWpiMjJDRUNvdVpYaGhiWEJzWlM1amIyMHVhR3VDRG1WNFlXMXdiR1V1WTI5dApMbWhyTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDZVdqWTVlUUNWWWpoeFVVUDc1dlduUzBaY2lSUGorMHU4CkhSL1VjSWxGTDBGTk5maTFFR04yejB3QSttcUhlNm5rUmZsNUZ5RC9OYVVhVnNwc0RPdnBDWE90d0hOUjBpekUKVFlISnJMcGhWdGNpRUM5S285bkhqTjdPL1ZBQXVtTnZuV3QvVUpialpQcTNxNDdGa0FoUUhSeGRpU0tzdGRhKwpDVStmSzVzVDVDS2d1Uks3ajd1bjZ1NHZaL2NnSUJJaHJwcDdwQWhCYStKVlcvOFdpaDdnMEszNjRpNGFhVThOClFnVkFVMVB6aWl4M0NiZWppZnU1emw5bTlOQ0ltRFBWK21KWnBaZVBpSDRtcnFHSXltb3hvNHRxdWZsNzRpbTEKUkt5Y2U3NWpvam1nKzZXMFdtUUFWcmczV1BGTmt0SEUwSFNZaFQrV0xFemxISUhSOXlCNgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEd2pDQ0FxcWdBd0lCQWdJSkFOVmUzRm5Jc0l0Wk1BMEdDU3FHU0liM0RRRUJDd1VBTUdJeEN6QUpCZ05WCkJBWVRBa05PTVE4d0RRWURWUVFJREFaMmNISnZlSGt4RHpBTkJnTlZCQWNNQm5ad2NtOTRlVEVQTUEwR0ExVUUKQ2d3R2RuQnliM2g1TVE4d0RRWURWUVFMREFaMmNISnZlSGt4RHpBTkJnTlZCQU1NQm5ad2NtOTRlVEFnRncweQpNREF4TWpJd05qSXdNRFJhR0E4eU1URTVNVEl5T1RBMk1qQXdORm93WWpFTE1Ba0dBMVVFQmhNQ1EwNHhEekFOCkJnTlZCQWdNQm5ad2NtOTRlVEVQTUEwR0ExVUVCd3dHZG5CeWIzaDVNUTh3RFFZRFZRUUtEQVoyY0hKdmVIa3gKRHpBTkJnTlZCQXNNQm5ad2NtOTRlVEVQTUEwR0ExVUVBd3dHZG5CeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQgpBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2eE9ld1VoT3FBemIvbFJuYmpRUkJZZ29odml6bE9KZzVKdWx0eTlvCi9SZEhlMnFUdzBFQm91dm96TjJuWVBsOGF3SktvZlQvTjBVV0EyU1QwRGFzUzRiUzZjL2gwZG56KzE0ckZXTU4KcnVCU2xKdml2Q3JRSlp6NHkzb01Ca2l4dXVTWmliUWliMjhtREdmUG5PdTUwSC93c0toQnpkTnRWR1F4RHNTUApmbDBYbDRUbnhLK3NON0lHNWFzNWNnN0dtM0o4SEpmTzNBWHlZMGpWaEtIYkZSa1VLTVZxeTN2M2FZRnR4bXJvCmlrTmFlRHYycWhobG1vallBMWlzUmlLLyttMm4zU29BRFFYYWVHRDBTTXZQbGJsUTd4MEVCbGtzZm1RRDcvTHUKTXFxSXRVcjltZEltOGFjc3A5eEZ5eWxiNjZ1VGpBUlRWaDVlWjdURDJ2MFhTUUlEQVFBQm8za3dkekFkQmdOVgpIUTRFRmdRVWJrdStKYWFWdHZSZDlCREFDaytGRmwyZFJxQXdId1lEVlIwakJCZ3dGb0FVYmt1K0phYVZ0dlJkCjlCREFDaytGRmwyZFJxQXdFZ1lEVlIwVEFRSC9CQWd3QmdFQi93SUJBekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKRVFZSllJWklBWWI0UWdFQkJBUURBZ0VHTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbTlhVWgzcWYwQStRagpRNUxIZXRqb1pPbWV3YVV2UkNBZnVTblFaeDJnT0tyK0piT0ViWHVob0MrL29IeHh3VDR3VkZMOXg1S2IzNERrClRhc243QlFVbXRuOG1GSVE2cnlpdVhLa2pueml0ZlZPQTNiU2QyanZmcllIT3B2bjRveHZMaTAxZGVxcG9oaFAKTHRmc0YvZ1BFdWpDRDVibTZ1M3M3aTdrbjViRlpDNDViNnlnM3JjTGVJOVZTRW05N0d1emE5OEh4YVVyUUEyVwo1ZEdiY2VyejR4U1hhTmpiRmQ3TUhCV3F5MGZoL2k4MnlXU09OeFByN1JCZ281R3YvdXNMdlpRZ1VCeTlRZDAyCmVUQjllZkFyL0puRjFTZnFIQVArK3kzNWlXdlkxa2lXTDU2alNidmZ0ckVCSmRSZlBoZzNVUC84SWtITFdpNVgKNW9CbTUzQ2kKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3N1dkFCSE9VKzk0RTEKOW1uQmlBRXh2L1A3Q0tVY3J0YmJGazdnZTBkOWdQNmxHR21QRFdoZWdvYXdZaWhmbm1aakI3cHBLNEkrdkIycwpPZFBHRmw0L2tNQm83U0dHc29zSEJ1TWpYdHFJeHZnMFlZYXdCbC9CcXpiU1N3U0lFL2tvY3VqMHNZeGxmUS9iCkJobXF4eUhHUE81ejFBdVYzMWpJTGdNUDl0djlmUFlvSmpaQUpFa2lRd0VqVVNvMUxqTStPcHpiRjdDMHdQaGIKUExoUzJ2N3NRZ3pra08yMFdPRXpKNXpCU0grOU1TYU0rRHRCY2xhTExJQjNOWUU4TEpFVXR3aGwvRERyQTV5cQoyZGN6T1FBZWF3TE94VnpRRG8vbWp0Wk9rZzFpZ1N6M1VKQ3JvSXFvZGQ0blZHNld0Yi9aWE8vaHk2c2N5UHJ0CnV4Tmg2RGczQWdNQkFBRUNnZ0VBSUZkMFB0RVpQM3Y2VG85UDUvTytQWUZ5Zm10MDl2VHB0K1hxYU8vTVIveVMKTVhscnNtUlJTWGpwSFRlVDFhdUVBa0RkTDNuOURpQU04a1YxbUo1eGtUZGFQNHMrL3NpSmJZeGxsU2JhaGtlegpDNlBESTB4ZU81WUNVc2ZIRm0rZTlHcm5vWUZwQjB1dVgxVTZFeGJzQlFFOXFLUm9jdXg1NUNseFcxamVnZ3pICnlyQ0Q0Nk9lTnc3K3k0OUpPQlVvYWNFRy9qM2pRQWJwOHMxNTh1L3FodHo3ay91UlVMRmw3eEkxNDNQRHBoMXgKekdPdDJOVmdPT3JxbDVjTXZHTno4RFZwODI3T1IrYk9Od3VUQlUrN0NMeW5HN3kxYjJxUE50eFZMVHU3eEtGRgpmYmw3bjI5SWtjSi82NTg2cmU0NXVBZ0dRSy9TNG90QUQ4bVlhLzVib1FLQmdRRGtWL2FVWjR2V0srcy9KZlVzCnJWd2xLNTliS3hPRDYxSFlsdlVpLzFjWlMzT2QzbFZHS2pRNXpjY3FDSFp4S2U1VkNWNG45ZWtvaUFQOWlabEwKRldZZXNudDdJTWk5YlJkbUJFYk5vTUpycW84ekRlTW1xTkRpRFdNTlVMVWlFNUlEa0xPemZZOWxkL05iSUFoUgo1K3dnbmFLWFp0WkhRY2pvWFNETm8zaURFUUtCZ1FEQnBwOUdUSzdiclNkaG92RGVHcmxvQ0VVL1BiYisxRWRzCmdQZ2xMdXo5dFMyWkNxSEV5SEdVb1krby9kY0ZJSThIb2xKb3B3aGxiK09kSkRGejc2ZEFRa2tHaGt2TnBMN1YKOVIvN0kwc3pQdkFTYTcrenJiS3BQL2Z4R1F4Y0drYjMybXRaeXFQRHd4dGxqRFVOazBCZ2ZzNGpUd0FVbDZJbwp2WmF6WE1qMnh3S0JnUUNWd1E3SlU0T0ZTYloxNnNuNXJCU0RtREZoMUVWdlBoU21iSktHaWxtd0VDamFQMmRECnBnZ3NaTVdhem9RSFFZMjZIWE92MTNvN2g4QytOZERnU2o5NElHd1ZXM0hyc2JFbnllUTVsWllNa0lacjRFNjYKR3ZzclZjWkJoRTNXOUdqTmg4Z2pEbFRPSWpYcTdING9ZV2NlR09QNlVZcDBuek5KR1ZLYkt2dXRVUUtCZ0N2QwoxWmR6V01oMzFzQnZxL0xsSXlUcFNZekRDNG1HdXlVLzk5T2ZTUnNFU0d1ZlJYTk13SzRQM0lFWjYrOVNyai9SClpNSVZqUVl2Uk1hTUdValR6WDN0L01hbXJwYW9OaC92cHV4L3kweW5XbVV2U0VENGJibGxwVWdzbXVodFg4QSsKOGFkMjdZOGRsaUZhajlxamZoYlFVUkVWbHpVUUZ5c1J2TzZIZHpxZEFvR0JBSTB0bFFzTTdpbk93Nm9LaS83Vwp3YWFtbVI4d0hPWGFtQ0hxMTZ5NTRaZ3ZpYnBIdVIrWGVmdlZYUG9QSTE1M2ZJSjduVUY5SWI1cDJNU1JIY0F2CkZSZXVhUW9MZjNBUndPVWdxTXlKWEZRM0tjLzZSN096YlFlYWdpTEFzZkE5OWtlM0R4UlFOTXRnVjJyeUhIUXkKeHJSeC9SbXdqV3pDcUhqb2JIRlFOMnJ5Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: kubernetes.io/tls

---
apiVersion: v1
kind: Secret
metadata:
  name: crt-example2
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtRENDQW9DZ0F3SUJBZ0lKQUl2VHpJMkM5a2lQTUEwR0NTcUdTSWIzRFFFQkN3VUFNR0l4Q3pBSkJnTlYKQkFZVEFrTk9NUTh3RFFZRFZRUUlEQVoyY0hKdmVIa3hEekFOQmdOVkJBY01Cblp3Y205NGVURVBNQTBHQTFVRQpDZ3dHZG5CeWIzaDVNUTh3RFFZRFZRUUxEQVoyY0hKdmVIa3hEekFOQmdOVkJBTU1Cblp3Y205NGVUQWVGdzB5Ck1EQXhNakl3TnpFeU16WmFGdzB5TVRBeE1qRXdOekV5TXpaYU1IQXhDekFKQmdOVkJBWVRBa05PTVJFd0R3WUQKVlFRSURBaGxlR0Z0Y0d4bE1qRVJNQThHQTFVRUJ3d0laWGhoYlhCc1pUSXhFVEFQQmdOVkJBb01DR1Y0WVcxdwpiR1V5TVJFd0R3WURWUVFMREFobGVHRnRjR3hsTWpFVk1CTUdBMVVFQXd3TVpYaGhiWEJzWlRJdVkyOXRNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF2RkRUK3dwemtubFYzZUxiaDBUSnFWS2sKZUpyZlhjc1BFdmgvZ3J4VlVUTERoQU1xNkN4MW13dng4QXpWbUcxM0tFWXo3TENNdloyUkdLcDdEVnY0NzdkYwpEVmYwaEVWZUVVUEZ0ZzlaUjNKNmNTV0krdTVSaEYxY3BleGJhdk5SbklCVWxjL2djdkVMeXd3a0ZBT0U3NkdLCkV3d2xtblQ4SHZXaC85elFIVHgxZVpsSk9IL0t2RGozZkJEajBTbld4aUtabGxzZlFNR0grekRDZG1uUXZGcEEKaEsrMlhjTFd3c1hqc2pvQUh3Rzg5R09IMUgvUzNvUXZaVmhJSC9aT0VLZDM3VGJUWWJFVHZZa0Y5SFNvWkxhWgpjMUx0dmFxTXAyM3hPdEpSaE9qblZoZWoyWUc4NWM5V2daWTdYWUE2TlpiaEVHSzdTbUpCRll0TE45eVI3UUlECkFRQUJvME13UVRBSkJnTlZIUk1FQWpBQU1Bc0dBMVVkRHdRRUF3SUY0REFuQmdOVkhSRUVJREFlZ2c0cUxtVjQKWVcxd2JHVXlMbU52YllJTVpYaGhiWEJzWlRJdVkyOXRNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUIrbkNBcApVeUhlVGh4cVUrblpxbmk3SFZGRmVFc0NRb2ZuOS9HWTJzYmhNUXZMVFl2eGJwMXJiTHVQVWl0YnlreVlOMjlRClM2WDFuS1pVaDFyUzR6NzF6RFllSVJqR3FaeVVvblViVDFncGJBZjFId2xzNG90dzFBcnJob2haTWxJaTNpU3gKUkd2S0hzU3RhSkhMVEVLeC9iUWkwRHdyYUN1UXFlR3laRHV1NWlQSThGa2ZJdjMyT0V2OSsyeXkyK1M0Uis5dgpxS2tzV1JrODVGMjdlSHFqemgvVzkwTVlVSXdoNjZ0NGtNV1lPK3RZSUR2K0Y3SEtoMUlIdFRHTDRjaUo5M0dDCjM5YzBEQkZIZUFyT1Q2cVdUOHNHSjR6dUUxRmFRRUNEbXhXOHQxUDMwMk1POXNmcC9heHZsQWUzM2l2eGhadzIKRE44MDZYaDhUYUtuTnRNdgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQzhVTlA3Q25PU2VWWGQKNHR1SFJNbXBVcVI0bXQ5ZHl3OFMrSCtDdkZWUk1zT0VBeXJvTEhXYkMvSHdETldZYlhjb1JqUHNzSXk5blpFWQpxbnNOVy9qdnQxd05WL1NFUlY0UlE4VzJEMWxIY25weEpZajY3bEdFWFZ5bDdGdHE4MUdjZ0ZTVnorQnk4UXZMCkRDUVVBNFR2b1lvVERDV2FkUHdlOWFILzNOQWRQSFY1bVVrNGY4cThPUGQ4RU9QUktkYkdJcG1XV3g5QXdZZjcKTU1KMmFkQzhXa0NFcjdaZHd0YkN4ZU95T2dBZkFiejBZNGZVZjlMZWhDOWxXRWdmOWs0UXAzZnROdE5oc1JPOQppUVgwZEtoa3RwbHpVdTI5cW95bmJmRTYwbEdFNk9kV0Y2UFpnYnpsejFhQmxqdGRnRG8xbHVFUVlydEtZa0VWCmkwczMzSkh0QWdNQkFBRUNnZ0VBSTZYUld2WlJobXE5bkhFelNWbjJLcjFnTVF4d09Cc1dVV3NGQ0VTS2lnSm8KREhkbENlcFFvUGNUNTNNbWcrSkU2alRQNDRCUVJCeXR1Tk9jMDV5VGRSMXFxWVA2MzRjYUZYNlUwSy83SUpGRgpLR0lJbWllKytxV0p3a2NKenljY1RkbmxLUzdldUNOMUxneXdUN0dTMnFIanQxTlhVdlBPUGpZVllvLzBQWFEvCkJveDhhRk50VHdSNHlkY29iSWZkOG16OGFnQnM5aEZYRXZXNE84OVp2aG1kOExYemxPekx4c3lSQkZhYllhNXAKd1ZEOE1wSkwzd0lTNUUxclB5S0prSnc1ZjRvMFdBVTZrVTFaQ2tQQVhHVWtvTE9qZ3pRc0MwRXV0TEsrckNDbgpRNWx1SDY2dnZPdHJ6RW5RUHVTMUIzK0IvaGZ5TnI3ZHhvcmp6UzhOcVFLQmdRRHVsajMycUpwMk44THZvSDlDClVwNUtOeGkzUXNhSnA0Vm1mZXBjY3FJZVFiaEp1ajFKN252Rmc5Q09OK2pXZ2xBUE9HdiszbWJMbXU5ZUtrVncKUXpNTVhiUlhkbUpUR21DR0IwSWM5c3E0SlFNdmFNWlNjTjFUZFFZdlNoSUo3cElDbXgzdW9wWG9kRGxrSEo4UAp0L0ZjRDVUVmRFNXM0SXZNZFhLQVMvNTBHd0tCZ1FES0QxSGFFOElOTVczOHFyOUZPR0Vua0d3c09LZWhvNnVKCmhwWHhiNHVvZGpCTi9RRmd4MEladHZjblVhSGFGQUxKV1lXWSs3M2FZRTUrcEJtcGdSc1F4Unp1Y3dvU2lUdHoKeUlVdUZkK0pKd2dKNG0zUWhYanNjaVNIYStuRTh0Y1hmTmxtSGhuYnR5VEV5L0ZzUXZHTCtaY0t0Y0F3NUE3bgpGSXhOSUxlaWx3S0JnUUN4dEF2UTVRR3ZIWmMrL2M3cmFqZmwxU1cra2Fqb3JIS0t4U3hDMFVyNHVFQjRBWlJXCnRaOVFuUDVBZjFvWU01VkgwT0YzUXRWVHYwR2NaR1cxMlFkenBYT0dWWEdrcmhmSW5DMWMvMkE4U2EwV3FiWlYKZnlVS1hUWlBFSjlnOEdXbU5UelZHaG9IdWxGb3hIeWdxNFBFNndJUy9uN1BUMnd3ekNXTmM0ekJrd0tCZ0Q2MQpRRzdRb1BHZFBJZ2txWldlNksveHAxQ1dDSmdtaGs3NUFNSGNIMWlaeldYMnRoM0YyU0xINEs1SUxGWFV6Z1NWCkR0d3FqSUlnVDF3SUs1cXFZYTd6cllYbkYrSW15dGVsRElmLzY4N1IyVEhRSHNxUEViYzN1VlI1emlQOFJYcVoKbVpLU2x1M1VTY24xalNoUElrMlJtU21PdkdXdjhWd1B5WGNLUjFOakFvR0JBTDdXNWFkMGhDekRmc1ZDM1N2dApleHhJenY4VlpDTUhPZlp5UHg4ZkZLZEs3Si9TVWx6YTIrcFFEbmI1U2dhNk13UkQ1OE13dXI3aSs5bGFjc1haCndxaHpBc1NoSFYxQWxVM0NMdEFHdnltUmJGQ05hZ05xaFBzVGNwZlgxMkpURTJaMTdIcm9hWDJBNWtib09Vd2YKL0l3VXZkNWxET0paOUwwSGlCRVRrWGVjCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
type: kubernetes.io/tls

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: util-scripts
data:
  simple-http-server.sh: |
    #!/bin/bash

    port="$1"
    body="$2"

    if [ -z "$port" ]
    then
      echo "The first argument should be the port to listen on"
    exit 1
    fi

    if [ -z "$body" ]
    then
      echo "The second argument should be the body to output"
      exit 1
    fi

    if [ ! -z "$3" ]
    then
      echo "Too many arguments"
      exit 1
    fi

    oLang=$LANG oLcAll=$LC_ALL
    LANG=C LC_ALL=C
    len=${#body}
    LANG=$oLang LC_ALL=$oLcAll

    len=$(($len + 2))

    child=""

    exit_func() {
      if [ ! -z "$child" ]
      then
        echo "kill nc: $child"
        kill -TERM "$child"
      fi
      exit 130
    }

    trap 'exit_func' SIGINT

    while [ 1 ]
    do
      printf "HTTP/1.0 200 OK\r\nConnection: Close\r\nContent-Length: $len\r\n\r\n$body\r\n" | nc -l -p  "$port" 1>/dev/null &
      child=$!
      wait "$child"
      child=""
    done

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-example-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example
      version: v1
  template:
    metadata:
      labels:
        app: example
        version: v1
    spec:
      containers:
        - name: http
          image: wkgcass/vproxy-base:latest
          imagePullPolicy: IfNotPresent
          args:
          - '/bin/bash'
          - '/script/simple-http-server.sh'
          - '80'
          - 'example:v1'
          ports:
            - containerPort: 80
          volumeMounts:
          - name: script
            mountPath: /script
      volumes:
        - name: script
          configMap:
            name: util-scripts
            items:
            - key: simple-http-server.sh
              path: simple-http-server.sh

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-example-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example
      version: v2
  template:
    metadata:
      labels:
        app: example
        version: v2
    spec:
      containers:
        - name: http
          image: wkgcass/vproxy-base:latest
          imagePullPolicy: IfNotPresent
          args:
          - '/bin/bash'
          - '/script/simple-http-server.sh'
          - '80'
          - 'example:v2'
          ports:
            - containerPort: 80
          volumeMounts:
          - name: script
            mountPath: /script
      volumes:
        - name: script
          configMap:
            name: util-scripts
            items:
            - key: simple-http-server.sh
              path: simple-http-server.sh

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: http-example2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: example2
  template:
    metadata:
      labels:
        app: example2
    spec:
      containers:
        - name: http
          image: wkgcass/vproxy-base:latest
          imagePullPolicy: IfNotPresent
          args:
          - '/bin/bash'
          - '/script/simple-http-server.sh'
          - '80'
          - 'example2'
          ports:
            - containerPort: 80
          volumeMounts:
          - name: script
            mountPath: /script
      volumes:
        - name: script
          configMap:
            name: util-scripts
            items:
            - key: simple-http-server.sh
              path: simple-http-server.sh
