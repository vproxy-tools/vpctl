// Code generated by go-swagger; DO NOT EDIT.

package security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// UpdateSecurityGroupReader is a Reader for the UpdateSecurityGroup structure.
type UpdateSecurityGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSecurityGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateSecurityGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateSecurityGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSecurityGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateSecurityGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSecurityGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSecurityGroupNoContent creates a UpdateSecurityGroupNoContent with default headers values
func NewUpdateSecurityGroupNoContent() *UpdateSecurityGroupNoContent {
	return &UpdateSecurityGroupNoContent{}
}

/*
UpdateSecurityGroupNoContent describes a response with status code 204, with default header values.

ok
*/
type UpdateSecurityGroupNoContent struct {
}

// IsSuccess returns true when this update security group no content response has a 2xx status code
func (o *UpdateSecurityGroupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update security group no content response has a 3xx status code
func (o *UpdateSecurityGroupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group no content response has a 4xx status code
func (o *UpdateSecurityGroupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update security group no content response has a 5xx status code
func (o *UpdateSecurityGroupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group no content response a status code equal to that given
func (o *UpdateSecurityGroupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update security group no content response
func (o *UpdateSecurityGroupNoContent) Code() int {
	return 204
}

func (o *UpdateSecurityGroupNoContent) Error() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupNoContent ", 204)
}

func (o *UpdateSecurityGroupNoContent) String() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupNoContent ", 204)
}

func (o *UpdateSecurityGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateSecurityGroupBadRequest creates a UpdateSecurityGroupBadRequest with default headers values
func NewUpdateSecurityGroupBadRequest() *UpdateSecurityGroupBadRequest {
	return &UpdateSecurityGroupBadRequest{}
}

/*
UpdateSecurityGroupBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type UpdateSecurityGroupBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this update security group bad request response has a 2xx status code
func (o *UpdateSecurityGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group bad request response has a 3xx status code
func (o *UpdateSecurityGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group bad request response has a 4xx status code
func (o *UpdateSecurityGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update security group bad request response has a 5xx status code
func (o *UpdateSecurityGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group bad request response a status code equal to that given
func (o *UpdateSecurityGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update security group bad request response
func (o *UpdateSecurityGroupBadRequest) Code() int {
	return 400
}

func (o *UpdateSecurityGroupBadRequest) Error() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateSecurityGroupBadRequest) String() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateSecurityGroupBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *UpdateSecurityGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupNotFound creates a UpdateSecurityGroupNotFound with default headers values
func NewUpdateSecurityGroupNotFound() *UpdateSecurityGroupNotFound {
	return &UpdateSecurityGroupNotFound{}
}

/*
UpdateSecurityGroupNotFound describes a response with status code 404, with default header values.

resource not found
*/
type UpdateSecurityGroupNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this update security group not found response has a 2xx status code
func (o *UpdateSecurityGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group not found response has a 3xx status code
func (o *UpdateSecurityGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group not found response has a 4xx status code
func (o *UpdateSecurityGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update security group not found response has a 5xx status code
func (o *UpdateSecurityGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group not found response a status code equal to that given
func (o *UpdateSecurityGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update security group not found response
func (o *UpdateSecurityGroupNotFound) Code() int {
	return 404
}

func (o *UpdateSecurityGroupNotFound) Error() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupNotFound  %+v", 404, o.Payload)
}

func (o *UpdateSecurityGroupNotFound) String() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupNotFound  %+v", 404, o.Payload)
}

func (o *UpdateSecurityGroupNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *UpdateSecurityGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupConflict creates a UpdateSecurityGroupConflict with default headers values
func NewUpdateSecurityGroupConflict() *UpdateSecurityGroupConflict {
	return &UpdateSecurityGroupConflict{}
}

/*
UpdateSecurityGroupConflict describes a response with status code 409, with default header values.

conflict
*/
type UpdateSecurityGroupConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this update security group conflict response has a 2xx status code
func (o *UpdateSecurityGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group conflict response has a 3xx status code
func (o *UpdateSecurityGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group conflict response has a 4xx status code
func (o *UpdateSecurityGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update security group conflict response has a 5xx status code
func (o *UpdateSecurityGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update security group conflict response a status code equal to that given
func (o *UpdateSecurityGroupConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update security group conflict response
func (o *UpdateSecurityGroupConflict) Code() int {
	return 409
}

func (o *UpdateSecurityGroupConflict) Error() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupConflict  %+v", 409, o.Payload)
}

func (o *UpdateSecurityGroupConflict) String() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupConflict  %+v", 409, o.Payload)
}

func (o *UpdateSecurityGroupConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *UpdateSecurityGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSecurityGroupInternalServerError creates a UpdateSecurityGroupInternalServerError with default headers values
func NewUpdateSecurityGroupInternalServerError() *UpdateSecurityGroupInternalServerError {
	return &UpdateSecurityGroupInternalServerError{}
}

/*
UpdateSecurityGroupInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type UpdateSecurityGroupInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this update security group internal server error response has a 2xx status code
func (o *UpdateSecurityGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update security group internal server error response has a 3xx status code
func (o *UpdateSecurityGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update security group internal server error response has a 4xx status code
func (o *UpdateSecurityGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update security group internal server error response has a 5xx status code
func (o *UpdateSecurityGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update security group internal server error response a status code equal to that given
func (o *UpdateSecurityGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update security group internal server error response
func (o *UpdateSecurityGroupInternalServerError) Code() int {
	return 500
}

func (o *UpdateSecurityGroupInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateSecurityGroupInternalServerError) String() string {
	return fmt.Sprintf("[PUT /security-group/{secg}][%d] updateSecurityGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateSecurityGroupInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *UpdateSecurityGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
