// Code generated by go-swagger; DO NOT EDIT.

package tcp_lb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// AddTCPLbReader is a Reader for the AddTCPLb structure.
type AddTCPLbReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTCPLbReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddTCPLbNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTCPLbBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTCPLbNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddTCPLbConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTCPLbInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddTCPLbNoContent creates a AddTCPLbNoContent with default headers values
func NewAddTCPLbNoContent() *AddTCPLbNoContent {
	return &AddTCPLbNoContent{}
}

/*
AddTCPLbNoContent describes a response with status code 204, with default header values.

ok
*/
type AddTCPLbNoContent struct {
}

// IsSuccess returns true when this add Tcp lb no content response has a 2xx status code
func (o *AddTCPLbNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add Tcp lb no content response has a 3xx status code
func (o *AddTCPLbNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add Tcp lb no content response has a 4xx status code
func (o *AddTCPLbNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this add Tcp lb no content response has a 5xx status code
func (o *AddTCPLbNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this add Tcp lb no content response a status code equal to that given
func (o *AddTCPLbNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the add Tcp lb no content response
func (o *AddTCPLbNoContent) Code() int {
	return 204
}

func (o *AddTCPLbNoContent) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbNoContent ", 204)
}

func (o *AddTCPLbNoContent) String() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbNoContent ", 204)
}

func (o *AddTCPLbNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTCPLbBadRequest creates a AddTCPLbBadRequest with default headers values
func NewAddTCPLbBadRequest() *AddTCPLbBadRequest {
	return &AddTCPLbBadRequest{}
}

/*
AddTCPLbBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type AddTCPLbBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this add Tcp lb bad request response has a 2xx status code
func (o *AddTCPLbBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add Tcp lb bad request response has a 3xx status code
func (o *AddTCPLbBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add Tcp lb bad request response has a 4xx status code
func (o *AddTCPLbBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add Tcp lb bad request response has a 5xx status code
func (o *AddTCPLbBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add Tcp lb bad request response a status code equal to that given
func (o *AddTCPLbBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add Tcp lb bad request response
func (o *AddTCPLbBadRequest) Code() int {
	return 400
}

func (o *AddTCPLbBadRequest) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbBadRequest  %+v", 400, o.Payload)
}

func (o *AddTCPLbBadRequest) String() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbBadRequest  %+v", 400, o.Payload)
}

func (o *AddTCPLbBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *AddTCPLbBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTCPLbNotFound creates a AddTCPLbNotFound with default headers values
func NewAddTCPLbNotFound() *AddTCPLbNotFound {
	return &AddTCPLbNotFound{}
}

/*
AddTCPLbNotFound describes a response with status code 404, with default header values.

resource not found
*/
type AddTCPLbNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this add Tcp lb not found response has a 2xx status code
func (o *AddTCPLbNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add Tcp lb not found response has a 3xx status code
func (o *AddTCPLbNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add Tcp lb not found response has a 4xx status code
func (o *AddTCPLbNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add Tcp lb not found response has a 5xx status code
func (o *AddTCPLbNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add Tcp lb not found response a status code equal to that given
func (o *AddTCPLbNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add Tcp lb not found response
func (o *AddTCPLbNotFound) Code() int {
	return 404
}

func (o *AddTCPLbNotFound) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbNotFound  %+v", 404, o.Payload)
}

func (o *AddTCPLbNotFound) String() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbNotFound  %+v", 404, o.Payload)
}

func (o *AddTCPLbNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *AddTCPLbNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTCPLbConflict creates a AddTCPLbConflict with default headers values
func NewAddTCPLbConflict() *AddTCPLbConflict {
	return &AddTCPLbConflict{}
}

/*
AddTCPLbConflict describes a response with status code 409, with default header values.

conflict
*/
type AddTCPLbConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this add Tcp lb conflict response has a 2xx status code
func (o *AddTCPLbConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add Tcp lb conflict response has a 3xx status code
func (o *AddTCPLbConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add Tcp lb conflict response has a 4xx status code
func (o *AddTCPLbConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this add Tcp lb conflict response has a 5xx status code
func (o *AddTCPLbConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this add Tcp lb conflict response a status code equal to that given
func (o *AddTCPLbConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the add Tcp lb conflict response
func (o *AddTCPLbConflict) Code() int {
	return 409
}

func (o *AddTCPLbConflict) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbConflict  %+v", 409, o.Payload)
}

func (o *AddTCPLbConflict) String() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbConflict  %+v", 409, o.Payload)
}

func (o *AddTCPLbConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *AddTCPLbConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTCPLbInternalServerError creates a AddTCPLbInternalServerError with default headers values
func NewAddTCPLbInternalServerError() *AddTCPLbInternalServerError {
	return &AddTCPLbInternalServerError{}
}

/*
AddTCPLbInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type AddTCPLbInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this add Tcp lb internal server error response has a 2xx status code
func (o *AddTCPLbInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add Tcp lb internal server error response has a 3xx status code
func (o *AddTCPLbInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add Tcp lb internal server error response has a 4xx status code
func (o *AddTCPLbInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add Tcp lb internal server error response has a 5xx status code
func (o *AddTCPLbInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add Tcp lb internal server error response a status code equal to that given
func (o *AddTCPLbInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add Tcp lb internal server error response
func (o *AddTCPLbInternalServerError) Code() int {
	return 500
}

func (o *AddTCPLbInternalServerError) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbInternalServerError  %+v", 500, o.Payload)
}

func (o *AddTCPLbInternalServerError) String() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbInternalServerError  %+v", 500, o.Payload)
}

func (o *AddTCPLbInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *AddTCPLbInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
