// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// DescribeServerGroupInUpstreamReader is a Reader for the DescribeServerGroupInUpstream structure.
type DescribeServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeServerGroupInUpstreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDescribeServerGroupInUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDescribeServerGroupInUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDescribeServerGroupInUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDescribeServerGroupInUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDescribeServerGroupInUpstreamOK creates a DescribeServerGroupInUpstreamOK with default headers values
func NewDescribeServerGroupInUpstreamOK() *DescribeServerGroupInUpstreamOK {
	return &DescribeServerGroupInUpstreamOK{}
}

/*
DescribeServerGroupInUpstreamOK describes a response with status code 200, with default header values.

ok
*/
type DescribeServerGroupInUpstreamOK struct {
	Payload *vproxy_client_model.ServerGroupInUpstreamDetail
}

// IsSuccess returns true when this describe server group in upstream o k response has a 2xx status code
func (o *DescribeServerGroupInUpstreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this describe server group in upstream o k response has a 3xx status code
func (o *DescribeServerGroupInUpstreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe server group in upstream o k response has a 4xx status code
func (o *DescribeServerGroupInUpstreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this describe server group in upstream o k response has a 5xx status code
func (o *DescribeServerGroupInUpstreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this describe server group in upstream o k response a status code equal to that given
func (o *DescribeServerGroupInUpstreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the describe server group in upstream o k response
func (o *DescribeServerGroupInUpstreamOK) Code() int {
	return 200
}

func (o *DescribeServerGroupInUpstreamOK) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *DescribeServerGroupInUpstreamOK) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *DescribeServerGroupInUpstreamOK) GetPayload() *vproxy_client_model.ServerGroupInUpstreamDetail {
	return o.Payload
}

func (o *DescribeServerGroupInUpstreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.ServerGroupInUpstreamDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeServerGroupInUpstreamBadRequest creates a DescribeServerGroupInUpstreamBadRequest with default headers values
func NewDescribeServerGroupInUpstreamBadRequest() *DescribeServerGroupInUpstreamBadRequest {
	return &DescribeServerGroupInUpstreamBadRequest{}
}

/*
DescribeServerGroupInUpstreamBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type DescribeServerGroupInUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this describe server group in upstream bad request response has a 2xx status code
func (o *DescribeServerGroupInUpstreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe server group in upstream bad request response has a 3xx status code
func (o *DescribeServerGroupInUpstreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe server group in upstream bad request response has a 4xx status code
func (o *DescribeServerGroupInUpstreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe server group in upstream bad request response has a 5xx status code
func (o *DescribeServerGroupInUpstreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this describe server group in upstream bad request response a status code equal to that given
func (o *DescribeServerGroupInUpstreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the describe server group in upstream bad request response
func (o *DescribeServerGroupInUpstreamBadRequest) Code() int {
	return 400
}

func (o *DescribeServerGroupInUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeServerGroupInUpstreamBadRequest) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeServerGroupInUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *DescribeServerGroupInUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeServerGroupInUpstreamNotFound creates a DescribeServerGroupInUpstreamNotFound with default headers values
func NewDescribeServerGroupInUpstreamNotFound() *DescribeServerGroupInUpstreamNotFound {
	return &DescribeServerGroupInUpstreamNotFound{}
}

/*
DescribeServerGroupInUpstreamNotFound describes a response with status code 404, with default header values.

resource not found
*/
type DescribeServerGroupInUpstreamNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this describe server group in upstream not found response has a 2xx status code
func (o *DescribeServerGroupInUpstreamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe server group in upstream not found response has a 3xx status code
func (o *DescribeServerGroupInUpstreamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe server group in upstream not found response has a 4xx status code
func (o *DescribeServerGroupInUpstreamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe server group in upstream not found response has a 5xx status code
func (o *DescribeServerGroupInUpstreamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this describe server group in upstream not found response a status code equal to that given
func (o *DescribeServerGroupInUpstreamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the describe server group in upstream not found response
func (o *DescribeServerGroupInUpstreamNotFound) Code() int {
	return 404
}

func (o *DescribeServerGroupInUpstreamNotFound) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *DescribeServerGroupInUpstreamNotFound) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *DescribeServerGroupInUpstreamNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *DescribeServerGroupInUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeServerGroupInUpstreamConflict creates a DescribeServerGroupInUpstreamConflict with default headers values
func NewDescribeServerGroupInUpstreamConflict() *DescribeServerGroupInUpstreamConflict {
	return &DescribeServerGroupInUpstreamConflict{}
}

/*
DescribeServerGroupInUpstreamConflict describes a response with status code 409, with default header values.

conflict
*/
type DescribeServerGroupInUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this describe server group in upstream conflict response has a 2xx status code
func (o *DescribeServerGroupInUpstreamConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe server group in upstream conflict response has a 3xx status code
func (o *DescribeServerGroupInUpstreamConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe server group in upstream conflict response has a 4xx status code
func (o *DescribeServerGroupInUpstreamConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe server group in upstream conflict response has a 5xx status code
func (o *DescribeServerGroupInUpstreamConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this describe server group in upstream conflict response a status code equal to that given
func (o *DescribeServerGroupInUpstreamConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the describe server group in upstream conflict response
func (o *DescribeServerGroupInUpstreamConflict) Code() int {
	return 409
}

func (o *DescribeServerGroupInUpstreamConflict) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *DescribeServerGroupInUpstreamConflict) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *DescribeServerGroupInUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *DescribeServerGroupInUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeServerGroupInUpstreamInternalServerError creates a DescribeServerGroupInUpstreamInternalServerError with default headers values
func NewDescribeServerGroupInUpstreamInternalServerError() *DescribeServerGroupInUpstreamInternalServerError {
	return &DescribeServerGroupInUpstreamInternalServerError{}
}

/*
DescribeServerGroupInUpstreamInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type DescribeServerGroupInUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this describe server group in upstream internal server error response has a 2xx status code
func (o *DescribeServerGroupInUpstreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe server group in upstream internal server error response has a 3xx status code
func (o *DescribeServerGroupInUpstreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe server group in upstream internal server error response has a 4xx status code
func (o *DescribeServerGroupInUpstreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this describe server group in upstream internal server error response has a 5xx status code
func (o *DescribeServerGroupInUpstreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this describe server group in upstream internal server error response a status code equal to that given
func (o *DescribeServerGroupInUpstreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the describe server group in upstream internal server error response
func (o *DescribeServerGroupInUpstreamInternalServerError) Code() int {
	return 500
}

func (o *DescribeServerGroupInUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *DescribeServerGroupInUpstreamInternalServerError) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}/detail][%d] describeServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *DescribeServerGroupInUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *DescribeServerGroupInUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
