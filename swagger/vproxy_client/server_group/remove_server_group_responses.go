// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// RemoveServerGroupReader is a Reader for the RemoveServerGroup structure.
type RemoveServerGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveServerGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveServerGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveServerGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveServerGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveServerGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveServerGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoveServerGroupNoContent creates a RemoveServerGroupNoContent with default headers values
func NewRemoveServerGroupNoContent() *RemoveServerGroupNoContent {
	return &RemoveServerGroupNoContent{}
}

/*
RemoveServerGroupNoContent describes a response with status code 204, with default header values.

ok
*/
type RemoveServerGroupNoContent struct {
}

// IsSuccess returns true when this remove server group no content response has a 2xx status code
func (o *RemoveServerGroupNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove server group no content response has a 3xx status code
func (o *RemoveServerGroupNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server group no content response has a 4xx status code
func (o *RemoveServerGroupNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove server group no content response has a 5xx status code
func (o *RemoveServerGroupNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server group no content response a status code equal to that given
func (o *RemoveServerGroupNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the remove server group no content response
func (o *RemoveServerGroupNoContent) Code() int {
	return 204
}

func (o *RemoveServerGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupNoContent ", 204)
}

func (o *RemoveServerGroupNoContent) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupNoContent ", 204)
}

func (o *RemoveServerGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveServerGroupBadRequest creates a RemoveServerGroupBadRequest with default headers values
func NewRemoveServerGroupBadRequest() *RemoveServerGroupBadRequest {
	return &RemoveServerGroupBadRequest{}
}

/*
RemoveServerGroupBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type RemoveServerGroupBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this remove server group bad request response has a 2xx status code
func (o *RemoveServerGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server group bad request response has a 3xx status code
func (o *RemoveServerGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server group bad request response has a 4xx status code
func (o *RemoveServerGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server group bad request response has a 5xx status code
func (o *RemoveServerGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server group bad request response a status code equal to that given
func (o *RemoveServerGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove server group bad request response
func (o *RemoveServerGroupBadRequest) Code() int {
	return 400
}

func (o *RemoveServerGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveServerGroupBadRequest) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveServerGroupBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *RemoveServerGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerGroupNotFound creates a RemoveServerGroupNotFound with default headers values
func NewRemoveServerGroupNotFound() *RemoveServerGroupNotFound {
	return &RemoveServerGroupNotFound{}
}

/*
RemoveServerGroupNotFound describes a response with status code 404, with default header values.

resource not found
*/
type RemoveServerGroupNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this remove server group not found response has a 2xx status code
func (o *RemoveServerGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server group not found response has a 3xx status code
func (o *RemoveServerGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server group not found response has a 4xx status code
func (o *RemoveServerGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server group not found response has a 5xx status code
func (o *RemoveServerGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server group not found response a status code equal to that given
func (o *RemoveServerGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove server group not found response
func (o *RemoveServerGroupNotFound) Code() int {
	return 404
}

func (o *RemoveServerGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupNotFound  %+v", 404, o.Payload)
}

func (o *RemoveServerGroupNotFound) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupNotFound  %+v", 404, o.Payload)
}

func (o *RemoveServerGroupNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *RemoveServerGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerGroupConflict creates a RemoveServerGroupConflict with default headers values
func NewRemoveServerGroupConflict() *RemoveServerGroupConflict {
	return &RemoveServerGroupConflict{}
}

/*
RemoveServerGroupConflict describes a response with status code 409, with default header values.

conflict
*/
type RemoveServerGroupConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this remove server group conflict response has a 2xx status code
func (o *RemoveServerGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server group conflict response has a 3xx status code
func (o *RemoveServerGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server group conflict response has a 4xx status code
func (o *RemoveServerGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server group conflict response has a 5xx status code
func (o *RemoveServerGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server group conflict response a status code equal to that given
func (o *RemoveServerGroupConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the remove server group conflict response
func (o *RemoveServerGroupConflict) Code() int {
	return 409
}

func (o *RemoveServerGroupConflict) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupConflict  %+v", 409, o.Payload)
}

func (o *RemoveServerGroupConflict) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupConflict  %+v", 409, o.Payload)
}

func (o *RemoveServerGroupConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *RemoveServerGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerGroupInternalServerError creates a RemoveServerGroupInternalServerError with default headers values
func NewRemoveServerGroupInternalServerError() *RemoveServerGroupInternalServerError {
	return &RemoveServerGroupInternalServerError{}
}

/*
RemoveServerGroupInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type RemoveServerGroupInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this remove server group internal server error response has a 2xx status code
func (o *RemoveServerGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server group internal server error response has a 3xx status code
func (o *RemoveServerGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server group internal server error response has a 4xx status code
func (o *RemoveServerGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove server group internal server error response has a 5xx status code
func (o *RemoveServerGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove server group internal server error response a status code equal to that given
func (o *RemoveServerGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove server group internal server error response
func (o *RemoveServerGroupInternalServerError) Code() int {
	return 500
}

func (o *RemoveServerGroupInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveServerGroupInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}][%d] removeServerGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveServerGroupInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *RemoveServerGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
