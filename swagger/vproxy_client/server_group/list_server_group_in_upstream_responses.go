// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// ListServerGroupInUpstreamReader is a Reader for the ListServerGroupInUpstream structure.
type ListServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServerGroupInUpstreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListServerGroupInUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListServerGroupInUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListServerGroupInUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListServerGroupInUpstreamOK creates a ListServerGroupInUpstreamOK with default headers values
func NewListServerGroupInUpstreamOK() *ListServerGroupInUpstreamOK {
	return &ListServerGroupInUpstreamOK{}
}

/*
ListServerGroupInUpstreamOK describes a response with status code 200, with default header values.

ok
*/
type ListServerGroupInUpstreamOK struct {
	Payload []*vproxy_client_model.ServerGroupInUpstream
}

// IsSuccess returns true when this list server group in upstream o k response has a 2xx status code
func (o *ListServerGroupInUpstreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list server group in upstream o k response has a 3xx status code
func (o *ListServerGroupInUpstreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server group in upstream o k response has a 4xx status code
func (o *ListServerGroupInUpstreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list server group in upstream o k response has a 5xx status code
func (o *ListServerGroupInUpstreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list server group in upstream o k response a status code equal to that given
func (o *ListServerGroupInUpstreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list server group in upstream o k response
func (o *ListServerGroupInUpstreamOK) Code() int {
	return 200
}

func (o *ListServerGroupInUpstreamOK) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *ListServerGroupInUpstreamOK) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *ListServerGroupInUpstreamOK) GetPayload() []*vproxy_client_model.ServerGroupInUpstream {
	return o.Payload
}

func (o *ListServerGroupInUpstreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerGroupInUpstreamBadRequest creates a ListServerGroupInUpstreamBadRequest with default headers values
func NewListServerGroupInUpstreamBadRequest() *ListServerGroupInUpstreamBadRequest {
	return &ListServerGroupInUpstreamBadRequest{}
}

/*
ListServerGroupInUpstreamBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type ListServerGroupInUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this list server group in upstream bad request response has a 2xx status code
func (o *ListServerGroupInUpstreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server group in upstream bad request response has a 3xx status code
func (o *ListServerGroupInUpstreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server group in upstream bad request response has a 4xx status code
func (o *ListServerGroupInUpstreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server group in upstream bad request response has a 5xx status code
func (o *ListServerGroupInUpstreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list server group in upstream bad request response a status code equal to that given
func (o *ListServerGroupInUpstreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list server group in upstream bad request response
func (o *ListServerGroupInUpstreamBadRequest) Code() int {
	return 400
}

func (o *ListServerGroupInUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *ListServerGroupInUpstreamBadRequest) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *ListServerGroupInUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *ListServerGroupInUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerGroupInUpstreamConflict creates a ListServerGroupInUpstreamConflict with default headers values
func NewListServerGroupInUpstreamConflict() *ListServerGroupInUpstreamConflict {
	return &ListServerGroupInUpstreamConflict{}
}

/*
ListServerGroupInUpstreamConflict describes a response with status code 409, with default header values.

conflict
*/
type ListServerGroupInUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this list server group in upstream conflict response has a 2xx status code
func (o *ListServerGroupInUpstreamConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server group in upstream conflict response has a 3xx status code
func (o *ListServerGroupInUpstreamConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server group in upstream conflict response has a 4xx status code
func (o *ListServerGroupInUpstreamConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server group in upstream conflict response has a 5xx status code
func (o *ListServerGroupInUpstreamConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this list server group in upstream conflict response a status code equal to that given
func (o *ListServerGroupInUpstreamConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the list server group in upstream conflict response
func (o *ListServerGroupInUpstreamConflict) Code() int {
	return 409
}

func (o *ListServerGroupInUpstreamConflict) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *ListServerGroupInUpstreamConflict) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *ListServerGroupInUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *ListServerGroupInUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerGroupInUpstreamInternalServerError creates a ListServerGroupInUpstreamInternalServerError with default headers values
func NewListServerGroupInUpstreamInternalServerError() *ListServerGroupInUpstreamInternalServerError {
	return &ListServerGroupInUpstreamInternalServerError{}
}

/*
ListServerGroupInUpstreamInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ListServerGroupInUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this list server group in upstream internal server error response has a 2xx status code
func (o *ListServerGroupInUpstreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server group in upstream internal server error response has a 3xx status code
func (o *ListServerGroupInUpstreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server group in upstream internal server error response has a 4xx status code
func (o *ListServerGroupInUpstreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list server group in upstream internal server error response has a 5xx status code
func (o *ListServerGroupInUpstreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list server group in upstream internal server error response a status code equal to that given
func (o *ListServerGroupInUpstreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list server group in upstream internal server error response
func (o *ListServerGroupInUpstreamInternalServerError) Code() int {
	return 500
}

func (o *ListServerGroupInUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServerGroupInUpstreamInternalServerError) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group][%d] listServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServerGroupInUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *ListServerGroupInUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
