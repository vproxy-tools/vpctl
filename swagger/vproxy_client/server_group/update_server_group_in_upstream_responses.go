// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// UpdateServerGroupInUpstreamReader is a Reader for the UpdateServerGroupInUpstream structure.
type UpdateServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateServerGroupInUpstreamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServerGroupInUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServerGroupInUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateServerGroupInUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServerGroupInUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateServerGroupInUpstreamNoContent creates a UpdateServerGroupInUpstreamNoContent with default headers values
func NewUpdateServerGroupInUpstreamNoContent() *UpdateServerGroupInUpstreamNoContent {
	return &UpdateServerGroupInUpstreamNoContent{}
}

/*
UpdateServerGroupInUpstreamNoContent describes a response with status code 204, with default header values.

ok
*/
type UpdateServerGroupInUpstreamNoContent struct {
}

// IsSuccess returns true when this update server group in upstream no content response has a 2xx status code
func (o *UpdateServerGroupInUpstreamNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update server group in upstream no content response has a 3xx status code
func (o *UpdateServerGroupInUpstreamNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server group in upstream no content response has a 4xx status code
func (o *UpdateServerGroupInUpstreamNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update server group in upstream no content response has a 5xx status code
func (o *UpdateServerGroupInUpstreamNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update server group in upstream no content response a status code equal to that given
func (o *UpdateServerGroupInUpstreamNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update server group in upstream no content response
func (o *UpdateServerGroupInUpstreamNoContent) Code() int {
	return 204
}

func (o *UpdateServerGroupInUpstreamNoContent) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNoContent ", 204)
}

func (o *UpdateServerGroupInUpstreamNoContent) String() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNoContent ", 204)
}

func (o *UpdateServerGroupInUpstreamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServerGroupInUpstreamBadRequest creates a UpdateServerGroupInUpstreamBadRequest with default headers values
func NewUpdateServerGroupInUpstreamBadRequest() *UpdateServerGroupInUpstreamBadRequest {
	return &UpdateServerGroupInUpstreamBadRequest{}
}

/*
UpdateServerGroupInUpstreamBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type UpdateServerGroupInUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this update server group in upstream bad request response has a 2xx status code
func (o *UpdateServerGroupInUpstreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server group in upstream bad request response has a 3xx status code
func (o *UpdateServerGroupInUpstreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server group in upstream bad request response has a 4xx status code
func (o *UpdateServerGroupInUpstreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server group in upstream bad request response has a 5xx status code
func (o *UpdateServerGroupInUpstreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update server group in upstream bad request response a status code equal to that given
func (o *UpdateServerGroupInUpstreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update server group in upstream bad request response
func (o *UpdateServerGroupInUpstreamBadRequest) Code() int {
	return 400
}

func (o *UpdateServerGroupInUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServerGroupInUpstreamBadRequest) String() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServerGroupInUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamNotFound creates a UpdateServerGroupInUpstreamNotFound with default headers values
func NewUpdateServerGroupInUpstreamNotFound() *UpdateServerGroupInUpstreamNotFound {
	return &UpdateServerGroupInUpstreamNotFound{}
}

/*
UpdateServerGroupInUpstreamNotFound describes a response with status code 404, with default header values.

resource not found
*/
type UpdateServerGroupInUpstreamNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this update server group in upstream not found response has a 2xx status code
func (o *UpdateServerGroupInUpstreamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server group in upstream not found response has a 3xx status code
func (o *UpdateServerGroupInUpstreamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server group in upstream not found response has a 4xx status code
func (o *UpdateServerGroupInUpstreamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server group in upstream not found response has a 5xx status code
func (o *UpdateServerGroupInUpstreamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update server group in upstream not found response a status code equal to that given
func (o *UpdateServerGroupInUpstreamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update server group in upstream not found response
func (o *UpdateServerGroupInUpstreamNotFound) Code() int {
	return 404
}

func (o *UpdateServerGroupInUpstreamNotFound) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *UpdateServerGroupInUpstreamNotFound) String() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *UpdateServerGroupInUpstreamNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamConflict creates a UpdateServerGroupInUpstreamConflict with default headers values
func NewUpdateServerGroupInUpstreamConflict() *UpdateServerGroupInUpstreamConflict {
	return &UpdateServerGroupInUpstreamConflict{}
}

/*
UpdateServerGroupInUpstreamConflict describes a response with status code 409, with default header values.

conflict
*/
type UpdateServerGroupInUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this update server group in upstream conflict response has a 2xx status code
func (o *UpdateServerGroupInUpstreamConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server group in upstream conflict response has a 3xx status code
func (o *UpdateServerGroupInUpstreamConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server group in upstream conflict response has a 4xx status code
func (o *UpdateServerGroupInUpstreamConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server group in upstream conflict response has a 5xx status code
func (o *UpdateServerGroupInUpstreamConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update server group in upstream conflict response a status code equal to that given
func (o *UpdateServerGroupInUpstreamConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update server group in upstream conflict response
func (o *UpdateServerGroupInUpstreamConflict) Code() int {
	return 409
}

func (o *UpdateServerGroupInUpstreamConflict) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *UpdateServerGroupInUpstreamConflict) String() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *UpdateServerGroupInUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamInternalServerError creates a UpdateServerGroupInUpstreamInternalServerError with default headers values
func NewUpdateServerGroupInUpstreamInternalServerError() *UpdateServerGroupInUpstreamInternalServerError {
	return &UpdateServerGroupInUpstreamInternalServerError{}
}

/*
UpdateServerGroupInUpstreamInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type UpdateServerGroupInUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this update server group in upstream internal server error response has a 2xx status code
func (o *UpdateServerGroupInUpstreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server group in upstream internal server error response has a 3xx status code
func (o *UpdateServerGroupInUpstreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server group in upstream internal server error response has a 4xx status code
func (o *UpdateServerGroupInUpstreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update server group in upstream internal server error response has a 5xx status code
func (o *UpdateServerGroupInUpstreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update server group in upstream internal server error response a status code equal to that given
func (o *UpdateServerGroupInUpstreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update server group in upstream internal server error response
func (o *UpdateServerGroupInUpstreamInternalServerError) Code() int {
	return 500
}

func (o *UpdateServerGroupInUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServerGroupInUpstreamInternalServerError) String() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServerGroupInUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
