// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// GetServerGroupInUpstreamReader is a Reader for the GetServerGroupInUpstream structure.
type GetServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerGroupInUpstreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServerGroupInUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServerGroupInUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetServerGroupInUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServerGroupInUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetServerGroupInUpstreamOK creates a GetServerGroupInUpstreamOK with default headers values
func NewGetServerGroupInUpstreamOK() *GetServerGroupInUpstreamOK {
	return &GetServerGroupInUpstreamOK{}
}

/*
GetServerGroupInUpstreamOK describes a response with status code 200, with default header values.

ok
*/
type GetServerGroupInUpstreamOK struct {
	Payload *vproxy_client_model.ServerGroupInUpstream
}

// IsSuccess returns true when this get server group in upstream o k response has a 2xx status code
func (o *GetServerGroupInUpstreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get server group in upstream o k response has a 3xx status code
func (o *GetServerGroupInUpstreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server group in upstream o k response has a 4xx status code
func (o *GetServerGroupInUpstreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server group in upstream o k response has a 5xx status code
func (o *GetServerGroupInUpstreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get server group in upstream o k response a status code equal to that given
func (o *GetServerGroupInUpstreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get server group in upstream o k response
func (o *GetServerGroupInUpstreamOK) Code() int {
	return 200
}

func (o *GetServerGroupInUpstreamOK) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *GetServerGroupInUpstreamOK) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *GetServerGroupInUpstreamOK) GetPayload() *vproxy_client_model.ServerGroupInUpstream {
	return o.Payload
}

func (o *GetServerGroupInUpstreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.ServerGroupInUpstream)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupInUpstreamBadRequest creates a GetServerGroupInUpstreamBadRequest with default headers values
func NewGetServerGroupInUpstreamBadRequest() *GetServerGroupInUpstreamBadRequest {
	return &GetServerGroupInUpstreamBadRequest{}
}

/*
GetServerGroupInUpstreamBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type GetServerGroupInUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this get server group in upstream bad request response has a 2xx status code
func (o *GetServerGroupInUpstreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server group in upstream bad request response has a 3xx status code
func (o *GetServerGroupInUpstreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server group in upstream bad request response has a 4xx status code
func (o *GetServerGroupInUpstreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server group in upstream bad request response has a 5xx status code
func (o *GetServerGroupInUpstreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get server group in upstream bad request response a status code equal to that given
func (o *GetServerGroupInUpstreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get server group in upstream bad request response
func (o *GetServerGroupInUpstreamBadRequest) Code() int {
	return 400
}

func (o *GetServerGroupInUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerGroupInUpstreamBadRequest) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerGroupInUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *GetServerGroupInUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupInUpstreamNotFound creates a GetServerGroupInUpstreamNotFound with default headers values
func NewGetServerGroupInUpstreamNotFound() *GetServerGroupInUpstreamNotFound {
	return &GetServerGroupInUpstreamNotFound{}
}

/*
GetServerGroupInUpstreamNotFound describes a response with status code 404, with default header values.

resource not found
*/
type GetServerGroupInUpstreamNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this get server group in upstream not found response has a 2xx status code
func (o *GetServerGroupInUpstreamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server group in upstream not found response has a 3xx status code
func (o *GetServerGroupInUpstreamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server group in upstream not found response has a 4xx status code
func (o *GetServerGroupInUpstreamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server group in upstream not found response has a 5xx status code
func (o *GetServerGroupInUpstreamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get server group in upstream not found response a status code equal to that given
func (o *GetServerGroupInUpstreamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get server group in upstream not found response
func (o *GetServerGroupInUpstreamNotFound) Code() int {
	return 404
}

func (o *GetServerGroupInUpstreamNotFound) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *GetServerGroupInUpstreamNotFound) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *GetServerGroupInUpstreamNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *GetServerGroupInUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupInUpstreamConflict creates a GetServerGroupInUpstreamConflict with default headers values
func NewGetServerGroupInUpstreamConflict() *GetServerGroupInUpstreamConflict {
	return &GetServerGroupInUpstreamConflict{}
}

/*
GetServerGroupInUpstreamConflict describes a response with status code 409, with default header values.

conflict
*/
type GetServerGroupInUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this get server group in upstream conflict response has a 2xx status code
func (o *GetServerGroupInUpstreamConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server group in upstream conflict response has a 3xx status code
func (o *GetServerGroupInUpstreamConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server group in upstream conflict response has a 4xx status code
func (o *GetServerGroupInUpstreamConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server group in upstream conflict response has a 5xx status code
func (o *GetServerGroupInUpstreamConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get server group in upstream conflict response a status code equal to that given
func (o *GetServerGroupInUpstreamConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get server group in upstream conflict response
func (o *GetServerGroupInUpstreamConflict) Code() int {
	return 409
}

func (o *GetServerGroupInUpstreamConflict) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *GetServerGroupInUpstreamConflict) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *GetServerGroupInUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *GetServerGroupInUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupInUpstreamInternalServerError creates a GetServerGroupInUpstreamInternalServerError with default headers values
func NewGetServerGroupInUpstreamInternalServerError() *GetServerGroupInUpstreamInternalServerError {
	return &GetServerGroupInUpstreamInternalServerError{}
}

/*
GetServerGroupInUpstreamInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetServerGroupInUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this get server group in upstream internal server error response has a 2xx status code
func (o *GetServerGroupInUpstreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server group in upstream internal server error response has a 3xx status code
func (o *GetServerGroupInUpstreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server group in upstream internal server error response has a 4xx status code
func (o *GetServerGroupInUpstreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server group in upstream internal server error response has a 5xx status code
func (o *GetServerGroupInUpstreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get server group in upstream internal server error response a status code equal to that given
func (o *GetServerGroupInUpstreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get server group in upstream internal server error response
func (o *GetServerGroupInUpstreamInternalServerError) Code() int {
	return 500
}

func (o *GetServerGroupInUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerGroupInUpstreamInternalServerError) String() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerGroupInUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *GetServerGroupInUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
