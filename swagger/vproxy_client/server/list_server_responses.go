// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// ListServerReader is a Reader for the ListServer structure.
type ListServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListServerOK creates a ListServerOK with default headers values
func NewListServerOK() *ListServerOK {
	return &ListServerOK{}
}

/*
ListServerOK describes a response with status code 200, with default header values.

ok
*/
type ListServerOK struct {
	Payload []*vproxy_client_model.Server
}

// IsSuccess returns true when this list server o k response has a 2xx status code
func (o *ListServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list server o k response has a 3xx status code
func (o *ListServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server o k response has a 4xx status code
func (o *ListServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list server o k response has a 5xx status code
func (o *ListServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list server o k response a status code equal to that given
func (o *ListServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list server o k response
func (o *ListServerOK) Code() int {
	return 200
}

func (o *ListServerOK) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerOK  %+v", 200, o.Payload)
}

func (o *ListServerOK) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerOK  %+v", 200, o.Payload)
}

func (o *ListServerOK) GetPayload() []*vproxy_client_model.Server {
	return o.Payload
}

func (o *ListServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerBadRequest creates a ListServerBadRequest with default headers values
func NewListServerBadRequest() *ListServerBadRequest {
	return &ListServerBadRequest{}
}

/*
ListServerBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type ListServerBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this list server bad request response has a 2xx status code
func (o *ListServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server bad request response has a 3xx status code
func (o *ListServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server bad request response has a 4xx status code
func (o *ListServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server bad request response has a 5xx status code
func (o *ListServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list server bad request response a status code equal to that given
func (o *ListServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list server bad request response
func (o *ListServerBadRequest) Code() int {
	return 400
}

func (o *ListServerBadRequest) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerBadRequest  %+v", 400, o.Payload)
}

func (o *ListServerBadRequest) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerBadRequest  %+v", 400, o.Payload)
}

func (o *ListServerBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *ListServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerConflict creates a ListServerConflict with default headers values
func NewListServerConflict() *ListServerConflict {
	return &ListServerConflict{}
}

/*
ListServerConflict describes a response with status code 409, with default header values.

conflict
*/
type ListServerConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this list server conflict response has a 2xx status code
func (o *ListServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server conflict response has a 3xx status code
func (o *ListServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server conflict response has a 4xx status code
func (o *ListServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this list server conflict response has a 5xx status code
func (o *ListServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this list server conflict response a status code equal to that given
func (o *ListServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the list server conflict response
func (o *ListServerConflict) Code() int {
	return 409
}

func (o *ListServerConflict) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerConflict  %+v", 409, o.Payload)
}

func (o *ListServerConflict) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerConflict  %+v", 409, o.Payload)
}

func (o *ListServerConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *ListServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServerInternalServerError creates a ListServerInternalServerError with default headers values
func NewListServerInternalServerError() *ListServerInternalServerError {
	return &ListServerInternalServerError{}
}

/*
ListServerInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ListServerInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this list server internal server error response has a 2xx status code
func (o *ListServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list server internal server error response has a 3xx status code
func (o *ListServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list server internal server error response has a 4xx status code
func (o *ListServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list server internal server error response has a 5xx status code
func (o *ListServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list server internal server error response a status code equal to that given
func (o *ListServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list server internal server error response
func (o *ListServerInternalServerError) Code() int {
	return 500
}

func (o *ListServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServerInternalServerError) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server][%d] listServerInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServerInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *ListServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
