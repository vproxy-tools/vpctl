// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// RemoveServerReader is a Reader for the RemoveServer structure.
type RemoveServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoveServerNoContent creates a RemoveServerNoContent with default headers values
func NewRemoveServerNoContent() *RemoveServerNoContent {
	return &RemoveServerNoContent{}
}

/*
RemoveServerNoContent describes a response with status code 204, with default header values.

ok
*/
type RemoveServerNoContent struct {
}

// IsSuccess returns true when this remove server no content response has a 2xx status code
func (o *RemoveServerNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this remove server no content response has a 3xx status code
func (o *RemoveServerNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server no content response has a 4xx status code
func (o *RemoveServerNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove server no content response has a 5xx status code
func (o *RemoveServerNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server no content response a status code equal to that given
func (o *RemoveServerNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the remove server no content response
func (o *RemoveServerNoContent) Code() int {
	return 204
}

func (o *RemoveServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerNoContent ", 204)
}

func (o *RemoveServerNoContent) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerNoContent ", 204)
}

func (o *RemoveServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveServerBadRequest creates a RemoveServerBadRequest with default headers values
func NewRemoveServerBadRequest() *RemoveServerBadRequest {
	return &RemoveServerBadRequest{}
}

/*
RemoveServerBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type RemoveServerBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this remove server bad request response has a 2xx status code
func (o *RemoveServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server bad request response has a 3xx status code
func (o *RemoveServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server bad request response has a 4xx status code
func (o *RemoveServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server bad request response has a 5xx status code
func (o *RemoveServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server bad request response a status code equal to that given
func (o *RemoveServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the remove server bad request response
func (o *RemoveServerBadRequest) Code() int {
	return 400
}

func (o *RemoveServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveServerBadRequest) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveServerBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *RemoveServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerNotFound creates a RemoveServerNotFound with default headers values
func NewRemoveServerNotFound() *RemoveServerNotFound {
	return &RemoveServerNotFound{}
}

/*
RemoveServerNotFound describes a response with status code 404, with default header values.

resource not found
*/
type RemoveServerNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this remove server not found response has a 2xx status code
func (o *RemoveServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server not found response has a 3xx status code
func (o *RemoveServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server not found response has a 4xx status code
func (o *RemoveServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server not found response has a 5xx status code
func (o *RemoveServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server not found response a status code equal to that given
func (o *RemoveServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the remove server not found response
func (o *RemoveServerNotFound) Code() int {
	return 404
}

func (o *RemoveServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerNotFound  %+v", 404, o.Payload)
}

func (o *RemoveServerNotFound) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerNotFound  %+v", 404, o.Payload)
}

func (o *RemoveServerNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *RemoveServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerConflict creates a RemoveServerConflict with default headers values
func NewRemoveServerConflict() *RemoveServerConflict {
	return &RemoveServerConflict{}
}

/*
RemoveServerConflict describes a response with status code 409, with default header values.

conflict
*/
type RemoveServerConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this remove server conflict response has a 2xx status code
func (o *RemoveServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server conflict response has a 3xx status code
func (o *RemoveServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server conflict response has a 4xx status code
func (o *RemoveServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this remove server conflict response has a 5xx status code
func (o *RemoveServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this remove server conflict response a status code equal to that given
func (o *RemoveServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the remove server conflict response
func (o *RemoveServerConflict) Code() int {
	return 409
}

func (o *RemoveServerConflict) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerConflict  %+v", 409, o.Payload)
}

func (o *RemoveServerConflict) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerConflict  %+v", 409, o.Payload)
}

func (o *RemoveServerConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *RemoveServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveServerInternalServerError creates a RemoveServerInternalServerError with default headers values
func NewRemoveServerInternalServerError() *RemoveServerInternalServerError {
	return &RemoveServerInternalServerError{}
}

/*
RemoveServerInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type RemoveServerInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this remove server internal server error response has a 2xx status code
func (o *RemoveServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this remove server internal server error response has a 3xx status code
func (o *RemoveServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this remove server internal server error response has a 4xx status code
func (o *RemoveServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this remove server internal server error response has a 5xx status code
func (o *RemoveServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this remove server internal server error response a status code equal to that given
func (o *RemoveServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the remove server internal server error response
func (o *RemoveServerInternalServerError) Code() int {
	return 500
}

func (o *RemoveServerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveServerInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /server-group/{sg}/server/{svr}][%d] removeServerInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveServerInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *RemoveServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
