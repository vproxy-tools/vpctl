// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// GetServerReader is a Reader for the GetServer structure.
type GetServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetServerOK creates a GetServerOK with default headers values
func NewGetServerOK() *GetServerOK {
	return &GetServerOK{}
}

/*
GetServerOK describes a response with status code 200, with default header values.

ok
*/
type GetServerOK struct {
	Payload *vproxy_client_model.Server
}

// IsSuccess returns true when this get server o k response has a 2xx status code
func (o *GetServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get server o k response has a 3xx status code
func (o *GetServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server o k response has a 4xx status code
func (o *GetServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server o k response has a 5xx status code
func (o *GetServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get server o k response a status code equal to that given
func (o *GetServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get server o k response
func (o *GetServerOK) Code() int {
	return 200
}

func (o *GetServerOK) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerOK  %+v", 200, o.Payload)
}

func (o *GetServerOK) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerOK  %+v", 200, o.Payload)
}

func (o *GetServerOK) GetPayload() *vproxy_client_model.Server {
	return o.Payload
}

func (o *GetServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Server)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerBadRequest creates a GetServerBadRequest with default headers values
func NewGetServerBadRequest() *GetServerBadRequest {
	return &GetServerBadRequest{}
}

/*
GetServerBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type GetServerBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this get server bad request response has a 2xx status code
func (o *GetServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server bad request response has a 3xx status code
func (o *GetServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server bad request response has a 4xx status code
func (o *GetServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server bad request response has a 5xx status code
func (o *GetServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get server bad request response a status code equal to that given
func (o *GetServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get server bad request response
func (o *GetServerBadRequest) Code() int {
	return 400
}

func (o *GetServerBadRequest) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerBadRequest) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerBadRequest  %+v", 400, o.Payload)
}

func (o *GetServerBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *GetServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerNotFound creates a GetServerNotFound with default headers values
func NewGetServerNotFound() *GetServerNotFound {
	return &GetServerNotFound{}
}

/*
GetServerNotFound describes a response with status code 404, with default header values.

resource not found
*/
type GetServerNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this get server not found response has a 2xx status code
func (o *GetServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server not found response has a 3xx status code
func (o *GetServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server not found response has a 4xx status code
func (o *GetServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server not found response has a 5xx status code
func (o *GetServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get server not found response a status code equal to that given
func (o *GetServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get server not found response
func (o *GetServerNotFound) Code() int {
	return 404
}

func (o *GetServerNotFound) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerNotFound  %+v", 404, o.Payload)
}

func (o *GetServerNotFound) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerNotFound  %+v", 404, o.Payload)
}

func (o *GetServerNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *GetServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerConflict creates a GetServerConflict with default headers values
func NewGetServerConflict() *GetServerConflict {
	return &GetServerConflict{}
}

/*
GetServerConflict describes a response with status code 409, with default header values.

conflict
*/
type GetServerConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this get server conflict response has a 2xx status code
func (o *GetServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server conflict response has a 3xx status code
func (o *GetServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server conflict response has a 4xx status code
func (o *GetServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get server conflict response has a 5xx status code
func (o *GetServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get server conflict response a status code equal to that given
func (o *GetServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get server conflict response
func (o *GetServerConflict) Code() int {
	return 409
}

func (o *GetServerConflict) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerConflict  %+v", 409, o.Payload)
}

func (o *GetServerConflict) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerConflict  %+v", 409, o.Payload)
}

func (o *GetServerConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *GetServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerInternalServerError creates a GetServerInternalServerError with default headers values
func NewGetServerInternalServerError() *GetServerInternalServerError {
	return &GetServerInternalServerError{}
}

/*
GetServerInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetServerInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this get server internal server error response has a 2xx status code
func (o *GetServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get server internal server error response has a 3xx status code
func (o *GetServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get server internal server error response has a 4xx status code
func (o *GetServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get server internal server error response has a 5xx status code
func (o *GetServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get server internal server error response a status code equal to that given
func (o *GetServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get server internal server error response
func (o *GetServerInternalServerError) Code() int {
	return 500
}

func (o *GetServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerInternalServerError) String() string {
	return fmt.Sprintf("[GET /server-group/{sg}/server/{svr}][%d] getServerInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServerInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *GetServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
