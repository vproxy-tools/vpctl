// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// UpdateServerReader is a Reader for the UpdateServer structure.
type UpdateServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateServerNoContent creates a UpdateServerNoContent with default headers values
func NewUpdateServerNoContent() *UpdateServerNoContent {
	return &UpdateServerNoContent{}
}

/*
UpdateServerNoContent describes a response with status code 204, with default header values.

ok
*/
type UpdateServerNoContent struct {
}

// IsSuccess returns true when this update server no content response has a 2xx status code
func (o *UpdateServerNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update server no content response has a 3xx status code
func (o *UpdateServerNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server no content response has a 4xx status code
func (o *UpdateServerNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this update server no content response has a 5xx status code
func (o *UpdateServerNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this update server no content response a status code equal to that given
func (o *UpdateServerNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the update server no content response
func (o *UpdateServerNoContent) Code() int {
	return 204
}

func (o *UpdateServerNoContent) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNoContent ", 204)
}

func (o *UpdateServerNoContent) String() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNoContent ", 204)
}

func (o *UpdateServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServerBadRequest creates a UpdateServerBadRequest with default headers values
func NewUpdateServerBadRequest() *UpdateServerBadRequest {
	return &UpdateServerBadRequest{}
}

/*
UpdateServerBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type UpdateServerBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this update server bad request response has a 2xx status code
func (o *UpdateServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server bad request response has a 3xx status code
func (o *UpdateServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server bad request response has a 4xx status code
func (o *UpdateServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server bad request response has a 5xx status code
func (o *UpdateServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update server bad request response a status code equal to that given
func (o *UpdateServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update server bad request response
func (o *UpdateServerBadRequest) Code() int {
	return 400
}

func (o *UpdateServerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServerBadRequest) String() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServerBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *UpdateServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerNotFound creates a UpdateServerNotFound with default headers values
func NewUpdateServerNotFound() *UpdateServerNotFound {
	return &UpdateServerNotFound{}
}

/*
UpdateServerNotFound describes a response with status code 404, with default header values.

resource not found
*/
type UpdateServerNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this update server not found response has a 2xx status code
func (o *UpdateServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server not found response has a 3xx status code
func (o *UpdateServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server not found response has a 4xx status code
func (o *UpdateServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server not found response has a 5xx status code
func (o *UpdateServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update server not found response a status code equal to that given
func (o *UpdateServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update server not found response
func (o *UpdateServerNotFound) Code() int {
	return 404
}

func (o *UpdateServerNotFound) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNotFound  %+v", 404, o.Payload)
}

func (o *UpdateServerNotFound) String() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNotFound  %+v", 404, o.Payload)
}

func (o *UpdateServerNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *UpdateServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerConflict creates a UpdateServerConflict with default headers values
func NewUpdateServerConflict() *UpdateServerConflict {
	return &UpdateServerConflict{}
}

/*
UpdateServerConflict describes a response with status code 409, with default header values.

conflict
*/
type UpdateServerConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this update server conflict response has a 2xx status code
func (o *UpdateServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server conflict response has a 3xx status code
func (o *UpdateServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server conflict response has a 4xx status code
func (o *UpdateServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this update server conflict response has a 5xx status code
func (o *UpdateServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this update server conflict response a status code equal to that given
func (o *UpdateServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the update server conflict response
func (o *UpdateServerConflict) Code() int {
	return 409
}

func (o *UpdateServerConflict) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerConflict  %+v", 409, o.Payload)
}

func (o *UpdateServerConflict) String() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerConflict  %+v", 409, o.Payload)
}

func (o *UpdateServerConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *UpdateServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerInternalServerError creates a UpdateServerInternalServerError with default headers values
func NewUpdateServerInternalServerError() *UpdateServerInternalServerError {
	return &UpdateServerInternalServerError{}
}

/*
UpdateServerInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type UpdateServerInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this update server internal server error response has a 2xx status code
func (o *UpdateServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update server internal server error response has a 3xx status code
func (o *UpdateServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update server internal server error response has a 4xx status code
func (o *UpdateServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update server internal server error response has a 5xx status code
func (o *UpdateServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update server internal server error response a status code equal to that given
func (o *UpdateServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update server internal server error response
func (o *UpdateServerInternalServerError) Code() int {
	return 500
}

func (o *UpdateServerInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServerInternalServerError) String() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServerInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *UpdateServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
