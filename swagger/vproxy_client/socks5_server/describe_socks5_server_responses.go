// Code generated by go-swagger; DO NOT EDIT.

package socks5_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// DescribeSocks5ServerReader is a Reader for the DescribeSocks5Server structure.
type DescribeSocks5ServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeSocks5ServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeSocks5ServerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDescribeSocks5ServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDescribeSocks5ServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDescribeSocks5ServerConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDescribeSocks5ServerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDescribeSocks5ServerOK creates a DescribeSocks5ServerOK with default headers values
func NewDescribeSocks5ServerOK() *DescribeSocks5ServerOK {
	return &DescribeSocks5ServerOK{}
}

/*
DescribeSocks5ServerOK describes a response with status code 200, with default header values.

ok
*/
type DescribeSocks5ServerOK struct {
	Payload *vproxy_client_model.Socks5ServerDetail
}

// IsSuccess returns true when this describe socks5 server o k response has a 2xx status code
func (o *DescribeSocks5ServerOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this describe socks5 server o k response has a 3xx status code
func (o *DescribeSocks5ServerOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe socks5 server o k response has a 4xx status code
func (o *DescribeSocks5ServerOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this describe socks5 server o k response has a 5xx status code
func (o *DescribeSocks5ServerOK) IsServerError() bool {
	return false
}

// IsCode returns true when this describe socks5 server o k response a status code equal to that given
func (o *DescribeSocks5ServerOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the describe socks5 server o k response
func (o *DescribeSocks5ServerOK) Code() int {
	return 200
}

func (o *DescribeSocks5ServerOK) Error() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerOK  %+v", 200, o.Payload)
}

func (o *DescribeSocks5ServerOK) String() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerOK  %+v", 200, o.Payload)
}

func (o *DescribeSocks5ServerOK) GetPayload() *vproxy_client_model.Socks5ServerDetail {
	return o.Payload
}

func (o *DescribeSocks5ServerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Socks5ServerDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeSocks5ServerBadRequest creates a DescribeSocks5ServerBadRequest with default headers values
func NewDescribeSocks5ServerBadRequest() *DescribeSocks5ServerBadRequest {
	return &DescribeSocks5ServerBadRequest{}
}

/*
DescribeSocks5ServerBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type DescribeSocks5ServerBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this describe socks5 server bad request response has a 2xx status code
func (o *DescribeSocks5ServerBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe socks5 server bad request response has a 3xx status code
func (o *DescribeSocks5ServerBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe socks5 server bad request response has a 4xx status code
func (o *DescribeSocks5ServerBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe socks5 server bad request response has a 5xx status code
func (o *DescribeSocks5ServerBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this describe socks5 server bad request response a status code equal to that given
func (o *DescribeSocks5ServerBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the describe socks5 server bad request response
func (o *DescribeSocks5ServerBadRequest) Code() int {
	return 400
}

func (o *DescribeSocks5ServerBadRequest) Error() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeSocks5ServerBadRequest) String() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeSocks5ServerBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *DescribeSocks5ServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeSocks5ServerNotFound creates a DescribeSocks5ServerNotFound with default headers values
func NewDescribeSocks5ServerNotFound() *DescribeSocks5ServerNotFound {
	return &DescribeSocks5ServerNotFound{}
}

/*
DescribeSocks5ServerNotFound describes a response with status code 404, with default header values.

resource not found
*/
type DescribeSocks5ServerNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this describe socks5 server not found response has a 2xx status code
func (o *DescribeSocks5ServerNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe socks5 server not found response has a 3xx status code
func (o *DescribeSocks5ServerNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe socks5 server not found response has a 4xx status code
func (o *DescribeSocks5ServerNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe socks5 server not found response has a 5xx status code
func (o *DescribeSocks5ServerNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this describe socks5 server not found response a status code equal to that given
func (o *DescribeSocks5ServerNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the describe socks5 server not found response
func (o *DescribeSocks5ServerNotFound) Code() int {
	return 404
}

func (o *DescribeSocks5ServerNotFound) Error() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerNotFound  %+v", 404, o.Payload)
}

func (o *DescribeSocks5ServerNotFound) String() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerNotFound  %+v", 404, o.Payload)
}

func (o *DescribeSocks5ServerNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *DescribeSocks5ServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeSocks5ServerConflict creates a DescribeSocks5ServerConflict with default headers values
func NewDescribeSocks5ServerConflict() *DescribeSocks5ServerConflict {
	return &DescribeSocks5ServerConflict{}
}

/*
DescribeSocks5ServerConflict describes a response with status code 409, with default header values.

conflict
*/
type DescribeSocks5ServerConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this describe socks5 server conflict response has a 2xx status code
func (o *DescribeSocks5ServerConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe socks5 server conflict response has a 3xx status code
func (o *DescribeSocks5ServerConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe socks5 server conflict response has a 4xx status code
func (o *DescribeSocks5ServerConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this describe socks5 server conflict response has a 5xx status code
func (o *DescribeSocks5ServerConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this describe socks5 server conflict response a status code equal to that given
func (o *DescribeSocks5ServerConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the describe socks5 server conflict response
func (o *DescribeSocks5ServerConflict) Code() int {
	return 409
}

func (o *DescribeSocks5ServerConflict) Error() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerConflict  %+v", 409, o.Payload)
}

func (o *DescribeSocks5ServerConflict) String() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerConflict  %+v", 409, o.Payload)
}

func (o *DescribeSocks5ServerConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *DescribeSocks5ServerConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeSocks5ServerInternalServerError creates a DescribeSocks5ServerInternalServerError with default headers values
func NewDescribeSocks5ServerInternalServerError() *DescribeSocks5ServerInternalServerError {
	return &DescribeSocks5ServerInternalServerError{}
}

/*
DescribeSocks5ServerInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type DescribeSocks5ServerInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this describe socks5 server internal server error response has a 2xx status code
func (o *DescribeSocks5ServerInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this describe socks5 server internal server error response has a 3xx status code
func (o *DescribeSocks5ServerInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this describe socks5 server internal server error response has a 4xx status code
func (o *DescribeSocks5ServerInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this describe socks5 server internal server error response has a 5xx status code
func (o *DescribeSocks5ServerInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this describe socks5 server internal server error response a status code equal to that given
func (o *DescribeSocks5ServerInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the describe socks5 server internal server error response
func (o *DescribeSocks5ServerInternalServerError) Code() int {
	return 500
}

func (o *DescribeSocks5ServerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerInternalServerError  %+v", 500, o.Payload)
}

func (o *DescribeSocks5ServerInternalServerError) String() string {
	return fmt.Sprintf("[GET /socks5-server/{socks5}/detail][%d] describeSocks5ServerInternalServerError  %+v", 500, o.Payload)
}

func (o *DescribeSocks5ServerInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *DescribeSocks5ServerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
