// Code generated by go-swagger; DO NOT EDIT.

package event_loop

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDescribeEventLoopParams creates a new DescribeEventLoopParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDescribeEventLoopParams() *DescribeEventLoopParams {
	return &DescribeEventLoopParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDescribeEventLoopParamsWithTimeout creates a new DescribeEventLoopParams object
// with the ability to set a timeout on a request.
func NewDescribeEventLoopParamsWithTimeout(timeout time.Duration) *DescribeEventLoopParams {
	return &DescribeEventLoopParams{
		timeout: timeout,
	}
}

// NewDescribeEventLoopParamsWithContext creates a new DescribeEventLoopParams object
// with the ability to set a context for a request.
func NewDescribeEventLoopParamsWithContext(ctx context.Context) *DescribeEventLoopParams {
	return &DescribeEventLoopParams{
		Context: ctx,
	}
}

// NewDescribeEventLoopParamsWithHTTPClient creates a new DescribeEventLoopParams object
// with the ability to set a custom HTTPClient for a request.
func NewDescribeEventLoopParamsWithHTTPClient(client *http.Client) *DescribeEventLoopParams {
	return &DescribeEventLoopParams{
		HTTPClient: client,
	}
}

/*
DescribeEventLoopParams contains all the parameters to send to the API endpoint

	for the describe event loop operation.

	Typically these are written to a http.Request.
*/
type DescribeEventLoopParams struct {

	/* El.

	   name of the event-loop
	*/
	El string

	/* Elg.

	   name of the event-loop-group
	*/
	Elg string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the describe event loop params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DescribeEventLoopParams) WithDefaults() *DescribeEventLoopParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the describe event loop params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DescribeEventLoopParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the describe event loop params
func (o *DescribeEventLoopParams) WithTimeout(timeout time.Duration) *DescribeEventLoopParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the describe event loop params
func (o *DescribeEventLoopParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the describe event loop params
func (o *DescribeEventLoopParams) WithContext(ctx context.Context) *DescribeEventLoopParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the describe event loop params
func (o *DescribeEventLoopParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the describe event loop params
func (o *DescribeEventLoopParams) WithHTTPClient(client *http.Client) *DescribeEventLoopParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the describe event loop params
func (o *DescribeEventLoopParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEl adds the el to the describe event loop params
func (o *DescribeEventLoopParams) WithEl(el string) *DescribeEventLoopParams {
	o.SetEl(el)
	return o
}

// SetEl adds the el to the describe event loop params
func (o *DescribeEventLoopParams) SetEl(el string) {
	o.El = el
}

// WithElg adds the elg to the describe event loop params
func (o *DescribeEventLoopParams) WithElg(elg string) *DescribeEventLoopParams {
	o.SetElg(elg)
	return o
}

// SetElg adds the elg to the describe event loop params
func (o *DescribeEventLoopParams) SetElg(elg string) {
	o.Elg = elg
}

// WriteToRequest writes these params to a swagger request
func (o *DescribeEventLoopParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param el
	if err := r.SetPathParam("el", o.El); err != nil {
		return err
	}

	// path param elg
	if err := r.SetPathParam("elg", o.Elg); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
