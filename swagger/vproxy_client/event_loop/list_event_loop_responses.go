// Code generated by go-swagger; DO NOT EDIT.

package event_loop

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// ListEventLoopReader is a Reader for the ListEventLoop structure.
type ListEventLoopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEventLoopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEventLoopOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListEventLoopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListEventLoopConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListEventLoopInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListEventLoopOK creates a ListEventLoopOK with default headers values
func NewListEventLoopOK() *ListEventLoopOK {
	return &ListEventLoopOK{}
}

/*
ListEventLoopOK describes a response with status code 200, with default header values.

ok
*/
type ListEventLoopOK struct {
	Payload []*vproxy_client_model.EventLoop
}

// IsSuccess returns true when this list event loop o k response has a 2xx status code
func (o *ListEventLoopOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list event loop o k response has a 3xx status code
func (o *ListEventLoopOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list event loop o k response has a 4xx status code
func (o *ListEventLoopOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list event loop o k response has a 5xx status code
func (o *ListEventLoopOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list event loop o k response a status code equal to that given
func (o *ListEventLoopOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list event loop o k response
func (o *ListEventLoopOK) Code() int {
	return 200
}

func (o *ListEventLoopOK) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopOK  %+v", 200, o.Payload)
}

func (o *ListEventLoopOK) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopOK  %+v", 200, o.Payload)
}

func (o *ListEventLoopOK) GetPayload() []*vproxy_client_model.EventLoop {
	return o.Payload
}

func (o *ListEventLoopOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventLoopBadRequest creates a ListEventLoopBadRequest with default headers values
func NewListEventLoopBadRequest() *ListEventLoopBadRequest {
	return &ListEventLoopBadRequest{}
}

/*
ListEventLoopBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type ListEventLoopBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this list event loop bad request response has a 2xx status code
func (o *ListEventLoopBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list event loop bad request response has a 3xx status code
func (o *ListEventLoopBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list event loop bad request response has a 4xx status code
func (o *ListEventLoopBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list event loop bad request response has a 5xx status code
func (o *ListEventLoopBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list event loop bad request response a status code equal to that given
func (o *ListEventLoopBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list event loop bad request response
func (o *ListEventLoopBadRequest) Code() int {
	return 400
}

func (o *ListEventLoopBadRequest) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopBadRequest  %+v", 400, o.Payload)
}

func (o *ListEventLoopBadRequest) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopBadRequest  %+v", 400, o.Payload)
}

func (o *ListEventLoopBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *ListEventLoopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventLoopConflict creates a ListEventLoopConflict with default headers values
func NewListEventLoopConflict() *ListEventLoopConflict {
	return &ListEventLoopConflict{}
}

/*
ListEventLoopConflict describes a response with status code 409, with default header values.

conflict
*/
type ListEventLoopConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this list event loop conflict response has a 2xx status code
func (o *ListEventLoopConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list event loop conflict response has a 3xx status code
func (o *ListEventLoopConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list event loop conflict response has a 4xx status code
func (o *ListEventLoopConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this list event loop conflict response has a 5xx status code
func (o *ListEventLoopConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this list event loop conflict response a status code equal to that given
func (o *ListEventLoopConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the list event loop conflict response
func (o *ListEventLoopConflict) Code() int {
	return 409
}

func (o *ListEventLoopConflict) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopConflict  %+v", 409, o.Payload)
}

func (o *ListEventLoopConflict) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopConflict  %+v", 409, o.Payload)
}

func (o *ListEventLoopConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *ListEventLoopConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventLoopInternalServerError creates a ListEventLoopInternalServerError with default headers values
func NewListEventLoopInternalServerError() *ListEventLoopInternalServerError {
	return &ListEventLoopInternalServerError{}
}

/*
ListEventLoopInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type ListEventLoopInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this list event loop internal server error response has a 2xx status code
func (o *ListEventLoopInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list event loop internal server error response has a 3xx status code
func (o *ListEventLoopInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list event loop internal server error response has a 4xx status code
func (o *ListEventLoopInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list event loop internal server error response has a 5xx status code
func (o *ListEventLoopInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list event loop internal server error response a status code equal to that given
func (o *ListEventLoopInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list event loop internal server error response
func (o *ListEventLoopInternalServerError) Code() int {
	return 500
}

func (o *ListEventLoopInternalServerError) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopInternalServerError  %+v", 500, o.Payload)
}

func (o *ListEventLoopInternalServerError) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/event-loop][%d] listEventLoopInternalServerError  %+v", 500, o.Payload)
}

func (o *ListEventLoopInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *ListEventLoopInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
