// Code generated by go-swagger; DO NOT EDIT.

package event_loop_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/vproxy-tools/vpctl/swagger/vproxy_client_model"
)

// GetEventLoopGroupReader is a Reader for the GetEventLoopGroup structure.
type GetEventLoopGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventLoopGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventLoopGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetEventLoopGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEventLoopGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetEventLoopGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetEventLoopGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetEventLoopGroupOK creates a GetEventLoopGroupOK with default headers values
func NewGetEventLoopGroupOK() *GetEventLoopGroupOK {
	return &GetEventLoopGroupOK{}
}

/*
GetEventLoopGroupOK describes a response with status code 200, with default header values.

ok
*/
type GetEventLoopGroupOK struct {
	Payload *vproxy_client_model.EventLoopGroup
}

// IsSuccess returns true when this get event loop group o k response has a 2xx status code
func (o *GetEventLoopGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get event loop group o k response has a 3xx status code
func (o *GetEventLoopGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get event loop group o k response has a 4xx status code
func (o *GetEventLoopGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get event loop group o k response has a 5xx status code
func (o *GetEventLoopGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get event loop group o k response a status code equal to that given
func (o *GetEventLoopGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get event loop group o k response
func (o *GetEventLoopGroupOK) Code() int {
	return 200
}

func (o *GetEventLoopGroupOK) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupOK  %+v", 200, o.Payload)
}

func (o *GetEventLoopGroupOK) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupOK  %+v", 200, o.Payload)
}

func (o *GetEventLoopGroupOK) GetPayload() *vproxy_client_model.EventLoopGroup {
	return o.Payload
}

func (o *GetEventLoopGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.EventLoopGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventLoopGroupBadRequest creates a GetEventLoopGroupBadRequest with default headers values
func NewGetEventLoopGroupBadRequest() *GetEventLoopGroupBadRequest {
	return &GetEventLoopGroupBadRequest{}
}

/*
GetEventLoopGroupBadRequest describes a response with status code 400, with default header values.

invalid input parameters
*/
type GetEventLoopGroupBadRequest struct {
	Payload *vproxy_client_model.Error400
}

// IsSuccess returns true when this get event loop group bad request response has a 2xx status code
func (o *GetEventLoopGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get event loop group bad request response has a 3xx status code
func (o *GetEventLoopGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get event loop group bad request response has a 4xx status code
func (o *GetEventLoopGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get event loop group bad request response has a 5xx status code
func (o *GetEventLoopGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get event loop group bad request response a status code equal to that given
func (o *GetEventLoopGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get event loop group bad request response
func (o *GetEventLoopGroupBadRequest) Code() int {
	return 400
}

func (o *GetEventLoopGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetEventLoopGroupBadRequest) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupBadRequest  %+v", 400, o.Payload)
}

func (o *GetEventLoopGroupBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *GetEventLoopGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventLoopGroupNotFound creates a GetEventLoopGroupNotFound with default headers values
func NewGetEventLoopGroupNotFound() *GetEventLoopGroupNotFound {
	return &GetEventLoopGroupNotFound{}
}

/*
GetEventLoopGroupNotFound describes a response with status code 404, with default header values.

resource not found
*/
type GetEventLoopGroupNotFound struct {
	Payload *vproxy_client_model.Error404
}

// IsSuccess returns true when this get event loop group not found response has a 2xx status code
func (o *GetEventLoopGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get event loop group not found response has a 3xx status code
func (o *GetEventLoopGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get event loop group not found response has a 4xx status code
func (o *GetEventLoopGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get event loop group not found response has a 5xx status code
func (o *GetEventLoopGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get event loop group not found response a status code equal to that given
func (o *GetEventLoopGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get event loop group not found response
func (o *GetEventLoopGroupNotFound) Code() int {
	return 404
}

func (o *GetEventLoopGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetEventLoopGroupNotFound) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupNotFound  %+v", 404, o.Payload)
}

func (o *GetEventLoopGroupNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *GetEventLoopGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventLoopGroupConflict creates a GetEventLoopGroupConflict with default headers values
func NewGetEventLoopGroupConflict() *GetEventLoopGroupConflict {
	return &GetEventLoopGroupConflict{}
}

/*
GetEventLoopGroupConflict describes a response with status code 409, with default header values.

conflict
*/
type GetEventLoopGroupConflict struct {
	Payload *vproxy_client_model.Error409
}

// IsSuccess returns true when this get event loop group conflict response has a 2xx status code
func (o *GetEventLoopGroupConflict) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get event loop group conflict response has a 3xx status code
func (o *GetEventLoopGroupConflict) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get event loop group conflict response has a 4xx status code
func (o *GetEventLoopGroupConflict) IsClientError() bool {
	return true
}

// IsServerError returns true when this get event loop group conflict response has a 5xx status code
func (o *GetEventLoopGroupConflict) IsServerError() bool {
	return false
}

// IsCode returns true when this get event loop group conflict response a status code equal to that given
func (o *GetEventLoopGroupConflict) IsCode(code int) bool {
	return code == 409
}

// Code gets the status code for the get event loop group conflict response
func (o *GetEventLoopGroupConflict) Code() int {
	return 409
}

func (o *GetEventLoopGroupConflict) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupConflict  %+v", 409, o.Payload)
}

func (o *GetEventLoopGroupConflict) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupConflict  %+v", 409, o.Payload)
}

func (o *GetEventLoopGroupConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *GetEventLoopGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventLoopGroupInternalServerError creates a GetEventLoopGroupInternalServerError with default headers values
func NewGetEventLoopGroupInternalServerError() *GetEventLoopGroupInternalServerError {
	return &GetEventLoopGroupInternalServerError{}
}

/*
GetEventLoopGroupInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type GetEventLoopGroupInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

// IsSuccess returns true when this get event loop group internal server error response has a 2xx status code
func (o *GetEventLoopGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get event loop group internal server error response has a 3xx status code
func (o *GetEventLoopGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get event loop group internal server error response has a 4xx status code
func (o *GetEventLoopGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get event loop group internal server error response has a 5xx status code
func (o *GetEventLoopGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get event loop group internal server error response a status code equal to that given
func (o *GetEventLoopGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get event loop group internal server error response
func (o *GetEventLoopGroupInternalServerError) Code() int {
	return 500
}

func (o *GetEventLoopGroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEventLoopGroupInternalServerError) String() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}][%d] getEventLoopGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *GetEventLoopGroupInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *GetEventLoopGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
