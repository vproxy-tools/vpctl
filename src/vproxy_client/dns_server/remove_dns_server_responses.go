// Code generated by go-swagger; DO NOT EDIT.

package dns_server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveDNSServerReader is a Reader for the RemoveDNSServer structure.
type RemoveDNSServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveDNSServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveDNSServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveDNSServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveDNSServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveDNSServerNoContent creates a RemoveDNSServerNoContent with default headers values
func NewRemoveDNSServerNoContent() *RemoveDNSServerNoContent {
	return &RemoveDNSServerNoContent{}
}

/*RemoveDNSServerNoContent handles this case with default header values.

ok
*/
type RemoveDNSServerNoContent struct {
}

func (o *RemoveDNSServerNoContent) Error() string {
	return fmt.Sprintf("[DELETE /dns-server/{dns}][%d] removeDnsServerNoContent ", 204)
}

func (o *RemoveDNSServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDNSServerBadRequest creates a RemoveDNSServerBadRequest with default headers values
func NewRemoveDNSServerBadRequest() *RemoveDNSServerBadRequest {
	return &RemoveDNSServerBadRequest{}
}

/*RemoveDNSServerBadRequest handles this case with default header values.

Invalid input
*/
type RemoveDNSServerBadRequest struct {
}

func (o *RemoveDNSServerBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /dns-server/{dns}][%d] removeDnsServerBadRequest ", 400)
}

func (o *RemoveDNSServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveDNSServerNotFound creates a RemoveDNSServerNotFound with default headers values
func NewRemoveDNSServerNotFound() *RemoveDNSServerNotFound {
	return &RemoveDNSServerNotFound{}
}

/*RemoveDNSServerNotFound handles this case with default header values.

DnsServer not found
*/
type RemoveDNSServerNotFound struct {
}

func (o *RemoveDNSServerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /dns-server/{dns}][%d] removeDnsServerNotFound ", 404)
}

func (o *RemoveDNSServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
