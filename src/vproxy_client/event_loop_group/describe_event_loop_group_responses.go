// Code generated by go-swagger; DO NOT EDIT.

package event_loop_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// DescribeEventLoopGroupReader is a Reader for the DescribeEventLoopGroup structure.
type DescribeEventLoopGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeEventLoopGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeEventLoopGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDescribeEventLoopGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDescribeEventLoopGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDescribeEventLoopGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDescribeEventLoopGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDescribeEventLoopGroupOK creates a DescribeEventLoopGroupOK with default headers values
func NewDescribeEventLoopGroupOK() *DescribeEventLoopGroupOK {
	return &DescribeEventLoopGroupOK{}
}

/*DescribeEventLoopGroupOK handles this case with default header values.

ok
*/
type DescribeEventLoopGroupOK struct {
	Payload *vproxy_client_model.EventLoopGroupDetail
}

func (o *DescribeEventLoopGroupOK) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/detail][%d] describeEventLoopGroupOK  %+v", 200, o.Payload)
}

func (o *DescribeEventLoopGroupOK) GetPayload() *vproxy_client_model.EventLoopGroupDetail {
	return o.Payload
}

func (o *DescribeEventLoopGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.EventLoopGroupDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeEventLoopGroupBadRequest creates a DescribeEventLoopGroupBadRequest with default headers values
func NewDescribeEventLoopGroupBadRequest() *DescribeEventLoopGroupBadRequest {
	return &DescribeEventLoopGroupBadRequest{}
}

/*DescribeEventLoopGroupBadRequest handles this case with default header values.

invalid input parameters
*/
type DescribeEventLoopGroupBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *DescribeEventLoopGroupBadRequest) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/detail][%d] describeEventLoopGroupBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeEventLoopGroupBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *DescribeEventLoopGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeEventLoopGroupNotFound creates a DescribeEventLoopGroupNotFound with default headers values
func NewDescribeEventLoopGroupNotFound() *DescribeEventLoopGroupNotFound {
	return &DescribeEventLoopGroupNotFound{}
}

/*DescribeEventLoopGroupNotFound handles this case with default header values.

resource not found
*/
type DescribeEventLoopGroupNotFound struct {
	Payload *vproxy_client_model.Error404
}

func (o *DescribeEventLoopGroupNotFound) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/detail][%d] describeEventLoopGroupNotFound  %+v", 404, o.Payload)
}

func (o *DescribeEventLoopGroupNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *DescribeEventLoopGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeEventLoopGroupConflict creates a DescribeEventLoopGroupConflict with default headers values
func NewDescribeEventLoopGroupConflict() *DescribeEventLoopGroupConflict {
	return &DescribeEventLoopGroupConflict{}
}

/*DescribeEventLoopGroupConflict handles this case with default header values.

conflict
*/
type DescribeEventLoopGroupConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *DescribeEventLoopGroupConflict) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/detail][%d] describeEventLoopGroupConflict  %+v", 409, o.Payload)
}

func (o *DescribeEventLoopGroupConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *DescribeEventLoopGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeEventLoopGroupInternalServerError creates a DescribeEventLoopGroupInternalServerError with default headers values
func NewDescribeEventLoopGroupInternalServerError() *DescribeEventLoopGroupInternalServerError {
	return &DescribeEventLoopGroupInternalServerError{}
}

/*DescribeEventLoopGroupInternalServerError handles this case with default header values.

internal error
*/
type DescribeEventLoopGroupInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *DescribeEventLoopGroupInternalServerError) Error() string {
	return fmt.Sprintf("[GET /event-loop-group/{elg}/detail][%d] describeEventLoopGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *DescribeEventLoopGroupInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *DescribeEventLoopGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
