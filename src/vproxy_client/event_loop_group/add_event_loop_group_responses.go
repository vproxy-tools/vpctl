// Code generated by go-swagger; DO NOT EDIT.

package event_loop_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddEventLoopGroupReader is a Reader for the AddEventLoopGroup structure.
type AddEventLoopGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddEventLoopGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddEventLoopGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddEventLoopGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddEventLoopGroupNoContent creates a AddEventLoopGroupNoContent with default headers values
func NewAddEventLoopGroupNoContent() *AddEventLoopGroupNoContent {
	return &AddEventLoopGroupNoContent{}
}

/*AddEventLoopGroupNoContent handles this case with default header values.

ok
*/
type AddEventLoopGroupNoContent struct {
}

func (o *AddEventLoopGroupNoContent) Error() string {
	return fmt.Sprintf("[POST /event-loop-group][%d] addEventLoopGroupNoContent ", 204)
}

func (o *AddEventLoopGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEventLoopGroupBadRequest creates a AddEventLoopGroupBadRequest with default headers values
func NewAddEventLoopGroupBadRequest() *AddEventLoopGroupBadRequest {
	return &AddEventLoopGroupBadRequest{}
}

/*AddEventLoopGroupBadRequest handles this case with default header values.

Invalid input
*/
type AddEventLoopGroupBadRequest struct {
}

func (o *AddEventLoopGroupBadRequest) Error() string {
	return fmt.Sprintf("[POST /event-loop-group][%d] addEventLoopGroupBadRequest ", 400)
}

func (o *AddEventLoopGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
