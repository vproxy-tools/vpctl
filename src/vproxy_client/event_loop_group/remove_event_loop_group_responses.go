// Code generated by go-swagger; DO NOT EDIT.

package event_loop_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// RemoveEventLoopGroupReader is a Reader for the RemoveEventLoopGroup structure.
type RemoveEventLoopGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveEventLoopGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveEventLoopGroupNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveEventLoopGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveEventLoopGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveEventLoopGroupConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveEventLoopGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveEventLoopGroupNoContent creates a RemoveEventLoopGroupNoContent with default headers values
func NewRemoveEventLoopGroupNoContent() *RemoveEventLoopGroupNoContent {
	return &RemoveEventLoopGroupNoContent{}
}

/*RemoveEventLoopGroupNoContent handles this case with default header values.

ok
*/
type RemoveEventLoopGroupNoContent struct {
}

func (o *RemoveEventLoopGroupNoContent) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}][%d] removeEventLoopGroupNoContent ", 204)
}

func (o *RemoveEventLoopGroupNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveEventLoopGroupBadRequest creates a RemoveEventLoopGroupBadRequest with default headers values
func NewRemoveEventLoopGroupBadRequest() *RemoveEventLoopGroupBadRequest {
	return &RemoveEventLoopGroupBadRequest{}
}

/*RemoveEventLoopGroupBadRequest handles this case with default header values.

invalid input parameters
*/
type RemoveEventLoopGroupBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *RemoveEventLoopGroupBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}][%d] removeEventLoopGroupBadRequest  %+v", 400, o.Payload)
}

func (o *RemoveEventLoopGroupBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *RemoveEventLoopGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveEventLoopGroupNotFound creates a RemoveEventLoopGroupNotFound with default headers values
func NewRemoveEventLoopGroupNotFound() *RemoveEventLoopGroupNotFound {
	return &RemoveEventLoopGroupNotFound{}
}

/*RemoveEventLoopGroupNotFound handles this case with default header values.

resource not found
*/
type RemoveEventLoopGroupNotFound struct {
	Payload *vproxy_client_model.Error404
}

func (o *RemoveEventLoopGroupNotFound) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}][%d] removeEventLoopGroupNotFound  %+v", 404, o.Payload)
}

func (o *RemoveEventLoopGroupNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *RemoveEventLoopGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveEventLoopGroupConflict creates a RemoveEventLoopGroupConflict with default headers values
func NewRemoveEventLoopGroupConflict() *RemoveEventLoopGroupConflict {
	return &RemoveEventLoopGroupConflict{}
}

/*RemoveEventLoopGroupConflict handles this case with default header values.

conflict
*/
type RemoveEventLoopGroupConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *RemoveEventLoopGroupConflict) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}][%d] removeEventLoopGroupConflict  %+v", 409, o.Payload)
}

func (o *RemoveEventLoopGroupConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *RemoveEventLoopGroupConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveEventLoopGroupInternalServerError creates a RemoveEventLoopGroupInternalServerError with default headers values
func NewRemoveEventLoopGroupInternalServerError() *RemoveEventLoopGroupInternalServerError {
	return &RemoveEventLoopGroupInternalServerError{}
}

/*RemoveEventLoopGroupInternalServerError handles this case with default header values.

internal error
*/
type RemoveEventLoopGroupInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *RemoveEventLoopGroupInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}][%d] removeEventLoopGroupInternalServerError  %+v", 500, o.Payload)
}

func (o *RemoveEventLoopGroupInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *RemoveEventLoopGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
