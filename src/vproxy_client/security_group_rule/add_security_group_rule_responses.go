// Code generated by go-swagger; DO NOT EDIT.

package security_group_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddSecurityGroupRuleReader is a Reader for the AddSecurityGroupRule structure.
type AddSecurityGroupRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSecurityGroupRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddSecurityGroupRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSecurityGroupRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddSecurityGroupRuleNoContent creates a AddSecurityGroupRuleNoContent with default headers values
func NewAddSecurityGroupRuleNoContent() *AddSecurityGroupRuleNoContent {
	return &AddSecurityGroupRuleNoContent{}
}

/*AddSecurityGroupRuleNoContent handles this case with default header values.

ok
*/
type AddSecurityGroupRuleNoContent struct {
}

func (o *AddSecurityGroupRuleNoContent) Error() string {
	return fmt.Sprintf("[POST /security-group/{secg}/security-group-rule][%d] addSecurityGroupRuleNoContent ", 204)
}

func (o *AddSecurityGroupRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSecurityGroupRuleBadRequest creates a AddSecurityGroupRuleBadRequest with default headers values
func NewAddSecurityGroupRuleBadRequest() *AddSecurityGroupRuleBadRequest {
	return &AddSecurityGroupRuleBadRequest{}
}

/*AddSecurityGroupRuleBadRequest handles this case with default header values.

Invalid input
*/
type AddSecurityGroupRuleBadRequest struct {
}

func (o *AddSecurityGroupRuleBadRequest) Error() string {
	return fmt.Sprintf("[POST /security-group/{secg}/security-group-rule][%d] addSecurityGroupRuleBadRequest ", 400)
}

func (o *AddSecurityGroupRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
