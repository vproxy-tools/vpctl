// Code generated by go-swagger; DO NOT EDIT.

package smart_group_delegate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new smart group delegate API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for smart group delegate API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
AddSmartGroupDelegate adds smart group delegate
*/
func (a *Client) AddSmartGroupDelegate(params *AddSmartGroupDelegateParams) (*AddSmartGroupDelegateNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAddSmartGroupDelegateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "addSmartGroupDelegate",
		Method:             "POST",
		PathPattern:        "/smart-group-delegate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &AddSmartGroupDelegateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AddSmartGroupDelegateNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for addSmartGroupDelegate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DescribeSmartGroupDelegate gets detailed info of one smart group delegate
*/
func (a *Client) DescribeSmartGroupDelegate(params *DescribeSmartGroupDelegateParams) (*DescribeSmartGroupDelegateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDescribeSmartGroupDelegateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "describeSmartGroupDelegate",
		Method:             "GET",
		PathPattern:        "/smart-group-delegate/{sgd}/detail",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DescribeSmartGroupDelegateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DescribeSmartGroupDelegateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for describeSmartGroupDelegate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetSmartGroupDelegate gets smart group delegate
*/
func (a *Client) GetSmartGroupDelegate(params *GetSmartGroupDelegateParams) (*GetSmartGroupDelegateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSmartGroupDelegateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getSmartGroupDelegate",
		Method:             "GET",
		PathPattern:        "/smart-group-delegate/{sgd}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetSmartGroupDelegateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetSmartGroupDelegateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getSmartGroupDelegate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ListSmartGroupDelegate retrieves smart group delegate list
*/
func (a *Client) ListSmartGroupDelegate(params *ListSmartGroupDelegateParams) (*ListSmartGroupDelegateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewListSmartGroupDelegateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "listSmartGroupDelegate",
		Method:             "GET",
		PathPattern:        "/smart-group-delegate",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ListSmartGroupDelegateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ListSmartGroupDelegateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for listSmartGroupDelegate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
RemoveSmartGroupDelegate removes smart group delegate
*/
func (a *Client) RemoveSmartGroupDelegate(params *RemoveSmartGroupDelegateParams) (*RemoveSmartGroupDelegateNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRemoveSmartGroupDelegateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "removeSmartGroupDelegate",
		Method:             "DELETE",
		PathPattern:        "/smart-group-delegate/{sgd}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &RemoveSmartGroupDelegateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*RemoveSmartGroupDelegateNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for removeSmartGroupDelegate: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
