// Code generated by go-swagger; DO NOT EDIT.

package smart_node_delegate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// AddSmartNodeDelegateReader is a Reader for the AddSmartNodeDelegate structure.
type AddSmartNodeDelegateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSmartNodeDelegateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddSmartNodeDelegateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSmartNodeDelegateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddSmartNodeDelegateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddSmartNodeDelegateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddSmartNodeDelegateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddSmartNodeDelegateNoContent creates a AddSmartNodeDelegateNoContent with default headers values
func NewAddSmartNodeDelegateNoContent() *AddSmartNodeDelegateNoContent {
	return &AddSmartNodeDelegateNoContent{}
}

/*AddSmartNodeDelegateNoContent handles this case with default header values.

ok
*/
type AddSmartNodeDelegateNoContent struct {
}

func (o *AddSmartNodeDelegateNoContent) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateNoContent ", 204)
}

func (o *AddSmartNodeDelegateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSmartNodeDelegateBadRequest creates a AddSmartNodeDelegateBadRequest with default headers values
func NewAddSmartNodeDelegateBadRequest() *AddSmartNodeDelegateBadRequest {
	return &AddSmartNodeDelegateBadRequest{}
}

/*AddSmartNodeDelegateBadRequest handles this case with default header values.

invalid input parameters
*/
type AddSmartNodeDelegateBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *AddSmartNodeDelegateBadRequest) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateBadRequest  %+v", 400, o.Payload)
}

func (o *AddSmartNodeDelegateBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *AddSmartNodeDelegateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSmartNodeDelegateNotFound creates a AddSmartNodeDelegateNotFound with default headers values
func NewAddSmartNodeDelegateNotFound() *AddSmartNodeDelegateNotFound {
	return &AddSmartNodeDelegateNotFound{}
}

/*AddSmartNodeDelegateNotFound handles this case with default header values.

resource not found
*/
type AddSmartNodeDelegateNotFound struct {
	Payload *vproxy_client_model.Error404
}

func (o *AddSmartNodeDelegateNotFound) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateNotFound  %+v", 404, o.Payload)
}

func (o *AddSmartNodeDelegateNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *AddSmartNodeDelegateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSmartNodeDelegateConflict creates a AddSmartNodeDelegateConflict with default headers values
func NewAddSmartNodeDelegateConflict() *AddSmartNodeDelegateConflict {
	return &AddSmartNodeDelegateConflict{}
}

/*AddSmartNodeDelegateConflict handles this case with default header values.

conflict
*/
type AddSmartNodeDelegateConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *AddSmartNodeDelegateConflict) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateConflict  %+v", 409, o.Payload)
}

func (o *AddSmartNodeDelegateConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *AddSmartNodeDelegateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSmartNodeDelegateInternalServerError creates a AddSmartNodeDelegateInternalServerError with default headers values
func NewAddSmartNodeDelegateInternalServerError() *AddSmartNodeDelegateInternalServerError {
	return &AddSmartNodeDelegateInternalServerError{}
}

/*AddSmartNodeDelegateInternalServerError handles this case with default header values.

internal error
*/
type AddSmartNodeDelegateInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *AddSmartNodeDelegateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateInternalServerError  %+v", 500, o.Payload)
}

func (o *AddSmartNodeDelegateInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *AddSmartNodeDelegateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
