// Code generated by go-swagger; DO NOT EDIT.

package smart_node_delegate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddSmartNodeDelegateReader is a Reader for the AddSmartNodeDelegate structure.
type AddSmartNodeDelegateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSmartNodeDelegateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddSmartNodeDelegateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSmartNodeDelegateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddSmartNodeDelegateNoContent creates a AddSmartNodeDelegateNoContent with default headers values
func NewAddSmartNodeDelegateNoContent() *AddSmartNodeDelegateNoContent {
	return &AddSmartNodeDelegateNoContent{}
}

/*AddSmartNodeDelegateNoContent handles this case with default header values.

ok
*/
type AddSmartNodeDelegateNoContent struct {
}

func (o *AddSmartNodeDelegateNoContent) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateNoContent ", 204)
}

func (o *AddSmartNodeDelegateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSmartNodeDelegateBadRequest creates a AddSmartNodeDelegateBadRequest with default headers values
func NewAddSmartNodeDelegateBadRequest() *AddSmartNodeDelegateBadRequest {
	return &AddSmartNodeDelegateBadRequest{}
}

/*AddSmartNodeDelegateBadRequest handles this case with default header values.

Invalid input
*/
type AddSmartNodeDelegateBadRequest struct {
}

func (o *AddSmartNodeDelegateBadRequest) Error() string {
	return fmt.Sprintf("[POST /smart-node-delegate][%d] addSmartNodeDelegateBadRequest ", 400)
}

func (o *AddSmartNodeDelegateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
