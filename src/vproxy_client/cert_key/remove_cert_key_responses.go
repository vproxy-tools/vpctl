// Code generated by go-swagger; DO NOT EDIT.

package cert_key

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveCertKeyReader is a Reader for the RemoveCertKey structure.
type RemoveCertKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveCertKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveCertKeyNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveCertKeyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveCertKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveCertKeyNoContent creates a RemoveCertKeyNoContent with default headers values
func NewRemoveCertKeyNoContent() *RemoveCertKeyNoContent {
	return &RemoveCertKeyNoContent{}
}

/*RemoveCertKeyNoContent handles this case with default header values.

ok
*/
type RemoveCertKeyNoContent struct {
}

func (o *RemoveCertKeyNoContent) Error() string {
	return fmt.Sprintf("[DELETE /cert-key/{ck}][%d] removeCertKeyNoContent ", 204)
}

func (o *RemoveCertKeyNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveCertKeyBadRequest creates a RemoveCertKeyBadRequest with default headers values
func NewRemoveCertKeyBadRequest() *RemoveCertKeyBadRequest {
	return &RemoveCertKeyBadRequest{}
}

/*RemoveCertKeyBadRequest handles this case with default header values.

Invalid input
*/
type RemoveCertKeyBadRequest struct {
}

func (o *RemoveCertKeyBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /cert-key/{ck}][%d] removeCertKeyBadRequest ", 400)
}

func (o *RemoveCertKeyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveCertKeyNotFound creates a RemoveCertKeyNotFound with default headers values
func NewRemoveCertKeyNotFound() *RemoveCertKeyNotFound {
	return &RemoveCertKeyNotFound{}
}

/*RemoveCertKeyNotFound handles this case with default header values.

CertKey not found
*/
type RemoveCertKeyNotFound struct {
}

func (o *RemoveCertKeyNotFound) Error() string {
	return fmt.Sprintf("[DELETE /cert-key/{ck}][%d] removeCertKeyNotFound ", 404)
}

func (o *RemoveCertKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
