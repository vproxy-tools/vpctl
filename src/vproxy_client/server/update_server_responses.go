// Code generated by go-swagger; DO NOT EDIT.

package server

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// UpdateServerReader is a Reader for the UpdateServer structure.
type UpdateServerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateServerNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServerNoContent creates a UpdateServerNoContent with default headers values
func NewUpdateServerNoContent() *UpdateServerNoContent {
	return &UpdateServerNoContent{}
}

/*UpdateServerNoContent handles this case with default header values.

ok
*/
type UpdateServerNoContent struct {
}

func (o *UpdateServerNoContent) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNoContent ", 204)
}

func (o *UpdateServerNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServerBadRequest creates a UpdateServerBadRequest with default headers values
func NewUpdateServerBadRequest() *UpdateServerBadRequest {
	return &UpdateServerBadRequest{}
}

/*UpdateServerBadRequest handles this case with default header values.

Invalid input
*/
type UpdateServerBadRequest struct {
}

func (o *UpdateServerBadRequest) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerBadRequest ", 400)
}

func (o *UpdateServerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServerNotFound creates a UpdateServerNotFound with default headers values
func NewUpdateServerNotFound() *UpdateServerNotFound {
	return &UpdateServerNotFound{}
}

/*UpdateServerNotFound handles this case with default header values.

Server not found
*/
type UpdateServerNotFound struct {
}

func (o *UpdateServerNotFound) Error() string {
	return fmt.Sprintf("[PUT /server-group/{sg}/server/{svr}][%d] updateServerNotFound ", 404)
}

func (o *UpdateServerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
