// Code generated by go-swagger; DO NOT EDIT.

package upstream

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// AddUpstreamReader is a Reader for the AddUpstream structure.
type AddUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddUpstreamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddUpstreamNoContent creates a AddUpstreamNoContent with default headers values
func NewAddUpstreamNoContent() *AddUpstreamNoContent {
	return &AddUpstreamNoContent{}
}

/*AddUpstreamNoContent handles this case with default header values.

ok
*/
type AddUpstreamNoContent struct {
}

func (o *AddUpstreamNoContent) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamNoContent ", 204)
}

func (o *AddUpstreamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUpstreamBadRequest creates a AddUpstreamBadRequest with default headers values
func NewAddUpstreamBadRequest() *AddUpstreamBadRequest {
	return &AddUpstreamBadRequest{}
}

/*AddUpstreamBadRequest handles this case with default header values.

invalid input parameters
*/
type AddUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *AddUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *AddUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *AddUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUpstreamNotFound creates a AddUpstreamNotFound with default headers values
func NewAddUpstreamNotFound() *AddUpstreamNotFound {
	return &AddUpstreamNotFound{}
}

/*AddUpstreamNotFound handles this case with default header values.

resource not found
*/
type AddUpstreamNotFound struct {
	Payload *vproxy_client_model.Error404
}

func (o *AddUpstreamNotFound) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *AddUpstreamNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *AddUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUpstreamConflict creates a AddUpstreamConflict with default headers values
func NewAddUpstreamConflict() *AddUpstreamConflict {
	return &AddUpstreamConflict{}
}

/*AddUpstreamConflict handles this case with default header values.

conflict
*/
type AddUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *AddUpstreamConflict) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamConflict  %+v", 409, o.Payload)
}

func (o *AddUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *AddUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddUpstreamInternalServerError creates a AddUpstreamInternalServerError with default headers values
func NewAddUpstreamInternalServerError() *AddUpstreamInternalServerError {
	return &AddUpstreamInternalServerError{}
}

/*AddUpstreamInternalServerError handles this case with default header values.

internal error
*/
type AddUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *AddUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *AddUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *AddUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
