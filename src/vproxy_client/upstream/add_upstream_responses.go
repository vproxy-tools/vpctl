// Code generated by go-swagger; DO NOT EDIT.

package upstream

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddUpstreamReader is a Reader for the AddUpstream structure.
type AddUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddUpstreamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddUpstreamNoContent creates a AddUpstreamNoContent with default headers values
func NewAddUpstreamNoContent() *AddUpstreamNoContent {
	return &AddUpstreamNoContent{}
}

/*AddUpstreamNoContent handles this case with default header values.

ok
*/
type AddUpstreamNoContent struct {
}

func (o *AddUpstreamNoContent) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamNoContent ", 204)
}

func (o *AddUpstreamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddUpstreamBadRequest creates a AddUpstreamBadRequest with default headers values
func NewAddUpstreamBadRequest() *AddUpstreamBadRequest {
	return &AddUpstreamBadRequest{}
}

/*AddUpstreamBadRequest handles this case with default header values.

Invalid input
*/
type AddUpstreamBadRequest struct {
}

func (o *AddUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[POST /upstream][%d] addUpstreamBadRequest ", 400)
}

func (o *AddUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
