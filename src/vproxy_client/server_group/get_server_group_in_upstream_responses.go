// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// GetServerGroupInUpstreamReader is a Reader for the GetServerGroupInUpstream structure.
type GetServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServerGroupInUpstreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetServerGroupInUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServerGroupInUpstreamOK creates a GetServerGroupInUpstreamOK with default headers values
func NewGetServerGroupInUpstreamOK() *GetServerGroupInUpstreamOK {
	return &GetServerGroupInUpstreamOK{}
}

/*GetServerGroupInUpstreamOK handles this case with default header values.

ok
*/
type GetServerGroupInUpstreamOK struct {
	Payload *vproxy_client_model.ServerGroupInUpstream
}

func (o *GetServerGroupInUpstreamOK) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamOK  %+v", 200, o.Payload)
}

func (o *GetServerGroupInUpstreamOK) GetPayload() *vproxy_client_model.ServerGroupInUpstream {
	return o.Payload
}

func (o *GetServerGroupInUpstreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.ServerGroupInUpstream)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServerGroupInUpstreamNotFound creates a GetServerGroupInUpstreamNotFound with default headers values
func NewGetServerGroupInUpstreamNotFound() *GetServerGroupInUpstreamNotFound {
	return &GetServerGroupInUpstreamNotFound{}
}

/*GetServerGroupInUpstreamNotFound handles this case with default header values.

not found
*/
type GetServerGroupInUpstreamNotFound struct {
}

func (o *GetServerGroupInUpstreamNotFound) Error() string {
	return fmt.Sprintf("[GET /upstream/{ups}/server-group/{sg}][%d] getServerGroupInUpstreamNotFound ", 404)
}

func (o *GetServerGroupInUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
