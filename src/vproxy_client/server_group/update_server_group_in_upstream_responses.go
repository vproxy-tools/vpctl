// Code generated by go-swagger; DO NOT EDIT.

package server_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// UpdateServerGroupInUpstreamReader is a Reader for the UpdateServerGroupInUpstream structure.
type UpdateServerGroupInUpstreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateServerGroupInUpstreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateServerGroupInUpstreamNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateServerGroupInUpstreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateServerGroupInUpstreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewUpdateServerGroupInUpstreamConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateServerGroupInUpstreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServerGroupInUpstreamNoContent creates a UpdateServerGroupInUpstreamNoContent with default headers values
func NewUpdateServerGroupInUpstreamNoContent() *UpdateServerGroupInUpstreamNoContent {
	return &UpdateServerGroupInUpstreamNoContent{}
}

/*UpdateServerGroupInUpstreamNoContent handles this case with default header values.

ok
*/
type UpdateServerGroupInUpstreamNoContent struct {
}

func (o *UpdateServerGroupInUpstreamNoContent) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNoContent ", 204)
}

func (o *UpdateServerGroupInUpstreamNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServerGroupInUpstreamBadRequest creates a UpdateServerGroupInUpstreamBadRequest with default headers values
func NewUpdateServerGroupInUpstreamBadRequest() *UpdateServerGroupInUpstreamBadRequest {
	return &UpdateServerGroupInUpstreamBadRequest{}
}

/*UpdateServerGroupInUpstreamBadRequest handles this case with default header values.

invalid input parameters
*/
type UpdateServerGroupInUpstreamBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *UpdateServerGroupInUpstreamBadRequest) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateServerGroupInUpstreamBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamNotFound creates a UpdateServerGroupInUpstreamNotFound with default headers values
func NewUpdateServerGroupInUpstreamNotFound() *UpdateServerGroupInUpstreamNotFound {
	return &UpdateServerGroupInUpstreamNotFound{}
}

/*UpdateServerGroupInUpstreamNotFound handles this case with default header values.

resource not found
*/
type UpdateServerGroupInUpstreamNotFound struct {
	Payload *vproxy_client_model.Error404
}

func (o *UpdateServerGroupInUpstreamNotFound) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamNotFound  %+v", 404, o.Payload)
}

func (o *UpdateServerGroupInUpstreamNotFound) GetPayload() *vproxy_client_model.Error404 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error404)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamConflict creates a UpdateServerGroupInUpstreamConflict with default headers values
func NewUpdateServerGroupInUpstreamConflict() *UpdateServerGroupInUpstreamConflict {
	return &UpdateServerGroupInUpstreamConflict{}
}

/*UpdateServerGroupInUpstreamConflict handles this case with default header values.

conflict
*/
type UpdateServerGroupInUpstreamConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *UpdateServerGroupInUpstreamConflict) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamConflict  %+v", 409, o.Payload)
}

func (o *UpdateServerGroupInUpstreamConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServerGroupInUpstreamInternalServerError creates a UpdateServerGroupInUpstreamInternalServerError with default headers values
func NewUpdateServerGroupInUpstreamInternalServerError() *UpdateServerGroupInUpstreamInternalServerError {
	return &UpdateServerGroupInUpstreamInternalServerError{}
}

/*UpdateServerGroupInUpstreamInternalServerError handles this case with default header values.

internal error
*/
type UpdateServerGroupInUpstreamInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *UpdateServerGroupInUpstreamInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /upstream/{ups}/server-group/{sg}][%d] updateServerGroupInUpstreamInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServerGroupInUpstreamInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *UpdateServerGroupInUpstreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
