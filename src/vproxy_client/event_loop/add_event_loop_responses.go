// Code generated by go-swagger; DO NOT EDIT.

package event_loop

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddEventLoopReader is a Reader for the AddEventLoop structure.
type AddEventLoopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddEventLoopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddEventLoopNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddEventLoopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddEventLoopNoContent creates a AddEventLoopNoContent with default headers values
func NewAddEventLoopNoContent() *AddEventLoopNoContent {
	return &AddEventLoopNoContent{}
}

/*AddEventLoopNoContent handles this case with default header values.

ok
*/
type AddEventLoopNoContent struct {
}

func (o *AddEventLoopNoContent) Error() string {
	return fmt.Sprintf("[POST /event-loop-group/{elg}/event-loop][%d] addEventLoopNoContent ", 204)
}

func (o *AddEventLoopNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddEventLoopBadRequest creates a AddEventLoopBadRequest with default headers values
func NewAddEventLoopBadRequest() *AddEventLoopBadRequest {
	return &AddEventLoopBadRequest{}
}

/*AddEventLoopBadRequest handles this case with default header values.

Invalid input
*/
type AddEventLoopBadRequest struct {
}

func (o *AddEventLoopBadRequest) Error() string {
	return fmt.Sprintf("[POST /event-loop-group/{elg}/event-loop][%d] addEventLoopBadRequest ", 400)
}

func (o *AddEventLoopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
