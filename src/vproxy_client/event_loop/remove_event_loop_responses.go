// Code generated by go-swagger; DO NOT EDIT.

package event_loop

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// RemoveEventLoopReader is a Reader for the RemoveEventLoop structure.
type RemoveEventLoopReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveEventLoopReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewRemoveEventLoopNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveEventLoopBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveEventLoopNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewRemoveEventLoopNoContent creates a RemoveEventLoopNoContent with default headers values
func NewRemoveEventLoopNoContent() *RemoveEventLoopNoContent {
	return &RemoveEventLoopNoContent{}
}

/*RemoveEventLoopNoContent handles this case with default header values.

ok
*/
type RemoveEventLoopNoContent struct {
}

func (o *RemoveEventLoopNoContent) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}/event-loop/{el}][%d] removeEventLoopNoContent ", 204)
}

func (o *RemoveEventLoopNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveEventLoopBadRequest creates a RemoveEventLoopBadRequest with default headers values
func NewRemoveEventLoopBadRequest() *RemoveEventLoopBadRequest {
	return &RemoveEventLoopBadRequest{}
}

/*RemoveEventLoopBadRequest handles this case with default header values.

Invalid input
*/
type RemoveEventLoopBadRequest struct {
}

func (o *RemoveEventLoopBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}/event-loop/{el}][%d] removeEventLoopBadRequest ", 400)
}

func (o *RemoveEventLoopBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRemoveEventLoopNotFound creates a RemoveEventLoopNotFound with default headers values
func NewRemoveEventLoopNotFound() *RemoveEventLoopNotFound {
	return &RemoveEventLoopNotFound{}
}

/*RemoveEventLoopNotFound handles this case with default header values.

EventLoop not found
*/
type RemoveEventLoopNotFound struct {
}

func (o *RemoveEventLoopNotFound) Error() string {
	return fmt.Sprintf("[DELETE /event-loop-group/{elg}/event-loop/{el}][%d] removeEventLoopNotFound ", 404)
}

func (o *RemoveEventLoopNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
