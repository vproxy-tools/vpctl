// Code generated by go-swagger; DO NOT EDIT.

package tcp_lb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	vproxy_client_model "vproxy_client_model"
)

// ListTCPLbReader is a Reader for the ListTCPLb structure.
type ListTCPLbReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListTCPLbReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListTCPLbOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListTCPLbBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewListTCPLbConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListTCPLbInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListTCPLbOK creates a ListTCPLbOK with default headers values
func NewListTCPLbOK() *ListTCPLbOK {
	return &ListTCPLbOK{}
}

/*ListTCPLbOK handles this case with default header values.

ok
*/
type ListTCPLbOK struct {
	Payload []*vproxy_client_model.TCPLb
}

func (o *ListTCPLbOK) Error() string {
	return fmt.Sprintf("[GET /tcp-lb][%d] listTcpLbOK  %+v", 200, o.Payload)
}

func (o *ListTCPLbOK) GetPayload() []*vproxy_client_model.TCPLb {
	return o.Payload
}

func (o *ListTCPLbOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTCPLbBadRequest creates a ListTCPLbBadRequest with default headers values
func NewListTCPLbBadRequest() *ListTCPLbBadRequest {
	return &ListTCPLbBadRequest{}
}

/*ListTCPLbBadRequest handles this case with default header values.

invalid input parameters
*/
type ListTCPLbBadRequest struct {
	Payload *vproxy_client_model.Error400
}

func (o *ListTCPLbBadRequest) Error() string {
	return fmt.Sprintf("[GET /tcp-lb][%d] listTcpLbBadRequest  %+v", 400, o.Payload)
}

func (o *ListTCPLbBadRequest) GetPayload() *vproxy_client_model.Error400 {
	return o.Payload
}

func (o *ListTCPLbBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error400)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTCPLbConflict creates a ListTCPLbConflict with default headers values
func NewListTCPLbConflict() *ListTCPLbConflict {
	return &ListTCPLbConflict{}
}

/*ListTCPLbConflict handles this case with default header values.

conflict
*/
type ListTCPLbConflict struct {
	Payload *vproxy_client_model.Error409
}

func (o *ListTCPLbConflict) Error() string {
	return fmt.Sprintf("[GET /tcp-lb][%d] listTcpLbConflict  %+v", 409, o.Payload)
}

func (o *ListTCPLbConflict) GetPayload() *vproxy_client_model.Error409 {
	return o.Payload
}

func (o *ListTCPLbConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error409)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListTCPLbInternalServerError creates a ListTCPLbInternalServerError with default headers values
func NewListTCPLbInternalServerError() *ListTCPLbInternalServerError {
	return &ListTCPLbInternalServerError{}
}

/*ListTCPLbInternalServerError handles this case with default header values.

internal error
*/
type ListTCPLbInternalServerError struct {
	Payload *vproxy_client_model.Error500
}

func (o *ListTCPLbInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tcp-lb][%d] listTcpLbInternalServerError  %+v", 500, o.Payload)
}

func (o *ListTCPLbInternalServerError) GetPayload() *vproxy_client_model.Error500 {
	return o.Payload
}

func (o *ListTCPLbInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(vproxy_client_model.Error500)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
