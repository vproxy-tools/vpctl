// Code generated by go-swagger; DO NOT EDIT.

package tcp_lb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// AddTCPLbReader is a Reader for the AddTCPLb structure.
type AddTCPLbReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTCPLbReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewAddTCPLbNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTCPLbBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddTCPLbNoContent creates a AddTCPLbNoContent with default headers values
func NewAddTCPLbNoContent() *AddTCPLbNoContent {
	return &AddTCPLbNoContent{}
}

/*AddTCPLbNoContent handles this case with default header values.

ok
*/
type AddTCPLbNoContent struct {
}

func (o *AddTCPLbNoContent) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbNoContent ", 204)
}

func (o *AddTCPLbNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddTCPLbBadRequest creates a AddTCPLbBadRequest with default headers values
func NewAddTCPLbBadRequest() *AddTCPLbBadRequest {
	return &AddTCPLbBadRequest{}
}

/*AddTCPLbBadRequest handles this case with default header values.

Invalid input
*/
type AddTCPLbBadRequest struct {
}

func (o *AddTCPLbBadRequest) Error() string {
	return fmt.Sprintf("[POST /tcp-lb][%d] addTcpLbBadRequest ", 400)
}

func (o *AddTCPLbBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
