// Code generated by go-swagger; DO NOT EDIT.

package tcp_lb

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTCPLbParams creates a new GetTCPLbParams object
// with the default values initialized.
func NewGetTCPLbParams() *GetTCPLbParams {
	var ()
	return &GetTCPLbParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTCPLbParamsWithTimeout creates a new GetTCPLbParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTCPLbParamsWithTimeout(timeout time.Duration) *GetTCPLbParams {
	var ()
	return &GetTCPLbParams{

		timeout: timeout,
	}
}

// NewGetTCPLbParamsWithContext creates a new GetTCPLbParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTCPLbParamsWithContext(ctx context.Context) *GetTCPLbParams {
	var ()
	return &GetTCPLbParams{

		Context: ctx,
	}
}

// NewGetTCPLbParamsWithHTTPClient creates a new GetTCPLbParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTCPLbParamsWithHTTPClient(client *http.Client) *GetTCPLbParams {
	var ()
	return &GetTCPLbParams{
		HTTPClient: client,
	}
}

/*GetTCPLbParams contains all the parameters to send to the API endpoint
for the get Tcp lb operation typically these are written to a http.Request
*/
type GetTCPLbParams struct {

	/*Tl
	  name of the tcp-lb

	*/
	Tl string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get Tcp lb params
func (o *GetTCPLbParams) WithTimeout(timeout time.Duration) *GetTCPLbParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get Tcp lb params
func (o *GetTCPLbParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get Tcp lb params
func (o *GetTCPLbParams) WithContext(ctx context.Context) *GetTCPLbParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get Tcp lb params
func (o *GetTCPLbParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get Tcp lb params
func (o *GetTCPLbParams) WithHTTPClient(client *http.Client) *GetTCPLbParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get Tcp lb params
func (o *GetTCPLbParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTl adds the tl to the get Tcp lb params
func (o *GetTCPLbParams) WithTl(tl string) *GetTCPLbParams {
	o.SetTl(tl)
	return o
}

// SetTl adds the tl to the get Tcp lb params
func (o *GetTCPLbParams) SetTl(tl string) {
	o.Tl = tl
}

// WriteToRequest writes these params to a swagger request
func (o *GetTCPLbParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param tl
	if err := r.SetPathParam("tl", o.Tl); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
