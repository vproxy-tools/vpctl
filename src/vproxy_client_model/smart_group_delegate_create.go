// Code generated by go-swagger; DO NOT EDIT.

package vproxy_client_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SmartGroupDelegateCreate smart group delegate create
// swagger:model SmartGroupDelegateCreate
type SmartGroupDelegateCreate struct {

	// name of the delegated group
	// Required: true
	HandledGroup *string `json:"handledGroup"`

	// name
	// Required: true
	Name *string `json:"name"`

	// name of the watched service
	// Required: true
	Service *string `json:"service"`

	// name of the watched zone
	// Required: true
	Zone *string `json:"zone"`
}

// Validate validates this smart group delegate create
func (m *SmartGroupDelegateCreate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHandledGroup(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateService(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateZone(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SmartGroupDelegateCreate) validateHandledGroup(formats strfmt.Registry) error {

	if err := validate.Required("handledGroup", "body", m.HandledGroup); err != nil {
		return err
	}

	return nil
}

func (m *SmartGroupDelegateCreate) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *SmartGroupDelegateCreate) validateService(formats strfmt.Registry) error {

	if err := validate.Required("service", "body", m.Service); err != nil {
		return err
	}

	return nil
}

func (m *SmartGroupDelegateCreate) validateZone(formats strfmt.Registry) error {

	if err := validate.Required("zone", "body", m.Zone); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SmartGroupDelegateCreate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SmartGroupDelegateCreate) UnmarshalBinary(b []byte) error {
	var res SmartGroupDelegateCreate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
